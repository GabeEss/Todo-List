(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),d=n.n(i)()(r());d.push([e.id,":root{\n    --button-color: rgb(138, 168, 197);\n}\n\nbody {\n    background-color: blanchedalmond;\n    margin: 0;\n}\n\ncontent {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding-top: 15px;\n}\n\n#portfolio {\n    display: flex;\n    flex-direction: column;\n}\n\n#portfolio>#portfolio-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#portfolio>#project-list {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n    font-size: 16pt;\n    padding: 10px;\n    gap: 15px;\n}\n\n#portfolio button {\n    all:unset;\n    font-size: 13pt;\n    padding: 10px;\n    color: var(--button-color);\n}\n\n#project {\n    padding: 10px;\n}\n\n#project button{\n    all: unset;\n    font-size: 13pt;\n    color: var(--button-color);\n}\n\n#project>#todo-container {\n    padding-top: 15px;\n    padding-bottom: 10px;\n    gap: 15px;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n\n#project>#todo-label {\n    font-size: 14pt;\n    margin-bottom: 20px;\n    gap: 10px;\n}\n\n#project>#todo-container>div{\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content:space-between;\n    height: 360px;\n    width: 280px;\n    border-radius: 15px;\n    border-left: 10px solid orange;\n    background-color: white;\n    padding: 10px;\n    gap: 10px;\n}\n\n#todo-notes,\n #todo-description {\n    width: 90%;\n    resize: vertical; /* Allow the user to resize vertically */\n}\n\n#todo-notes {\n    height: 100px;\n}\n\n#todo-description {\n    height: 40px;\n}\n\ninput[type=text] {\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#project>#todo-container>form {\n    display: flex;\n    flex-direction: column;\n    align-items:stretch;\n    justify-content:space-evenly;\n}\n#todo-container>form>#form-priority-label {\n    padding-bottom: 5px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,kCAAkC;AACtC;;AAEA;IACI,gCAAgC;IAChC,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,0BAA0B;IAC1B,2BAA2B;IAC3B,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,aAAa;IACb,SAAS;AACb;;AAEA;IACI,SAAS;IACT,eAAe;IACf,aAAa;IACb,0BAA0B;AAC9B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,SAAS;IACT,aAAa;IACb,eAAe;AACnB;;;AAGA;IACI,eAAe;IACf,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,0BAA0B;IAC1B,6BAA6B;IAC7B,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,8BAA8B;IAC9B,uBAAuB;IACvB,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,UAAU;IACV,gBAAgB,EAAE,wCAAwC;AAC9D;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,qBAAqB;AACzB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,4BAA4B;AAChC;AACA;IACI,mBAAmB;AACvB",sourcesContent:[":root{\n    --button-color: rgb(138, 168, 197);\n}\n\nbody {\n    background-color: blanchedalmond;\n    margin: 0;\n}\n\ncontent {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding-top: 15px;\n}\n\n#portfolio {\n    display: flex;\n    flex-direction: column;\n}\n\n#portfolio>#portfolio-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#portfolio>#project-list {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n    font-size: 16pt;\n    padding: 10px;\n    gap: 15px;\n}\n\n#portfolio button {\n    all:unset;\n    font-size: 13pt;\n    padding: 10px;\n    color: var(--button-color);\n}\n\n#project {\n    padding: 10px;\n}\n\n#project button{\n    all: unset;\n    font-size: 13pt;\n    color: var(--button-color);\n}\n\n#project>#todo-container {\n    padding-top: 15px;\n    padding-bottom: 10px;\n    gap: 15px;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n\n#project>#todo-label {\n    font-size: 14pt;\n    margin-bottom: 20px;\n    gap: 10px;\n}\n\n#project>#todo-container>div{\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content:space-between;\n    height: 360px;\n    width: 280px;\n    border-radius: 15px;\n    border-left: 10px solid orange;\n    background-color: white;\n    padding: 10px;\n    gap: 10px;\n}\n\n#todo-notes,\n #todo-description {\n    width: 90%;\n    resize: vertical; /* Allow the user to resize vertically */\n}\n\n#todo-notes {\n    height: 100px;\n}\n\n#todo-description {\n    height: 40px;\n}\n\ninput[type=text] {\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#project>#todo-container>form {\n    display: flex;\n    flex-direction: column;\n    align-items:stretch;\n    justify-content:space-evenly;\n}\n#todo-container>form>#form-priority-label {\n    padding-bottom: 5px;\n}"],sourceRoot:""}]);const a=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);o&&d[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),t.push(p))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},d=[],a=0;a<e.length;a++){var c=e[a],l=o.base?c[0]+o.base:c[0],p=i[l]||0,s="".concat(l," ").concat(p);i[l]=p+1;var u=n(s),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var A=r(m,o);o.byIndex=a,t.splice(a,0,{identifier:s,updater:A,references:1})}d.push(s)}return d}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=n(i[d]);t[a].references--}for(var c=o(e,r),l=0;l<i.length;l++){var p=n(i[l]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),i=n(569),d=n.n(i),a=n(565),c=n.n(a),l=n(216),p=n.n(l),s=n(589),u=n.n(s),m=n(426),A={};A.styleTagTransform=u(),A.setAttributes=c(),A.insert=d().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=p(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;class C{constructor(e,t,n,o,r){this.title=e,this.description=t,this.priority=o,this.notes=r,this.dueDate=n,this.completed=!1}markComplete(){this.completed=!0}editTitle(e){this.title=e}editDescription(e){this.description=e}editDueDate(e){this.dueDate=e}editPriority(e){this.priority=e}editNote(e){this.note=e}}function h(e){const t=document.getElementById("content"),n=document.getElementById("project");t.removeChild(n),n.innerHTML="";const o=document.createElement("h2");o.textContent="Current project: "+e.title;const r=document.createElement("p");r.textContent=e.description;const i=document.createElement("p");!0!==e.completed?i.textContent="This project has not been completed.":i.textContent="This project has been completed.";const d=document.createElement("label");d.setAttribute("id","todo-label"),d.textContent="ToDo Items: ";const a=document.createElement("div");a.setAttribute("id","todo-container");const c=document.createElement("button");c.textContent="New ToDo",c.addEventListener("click",(()=>{const t=function(){const e=document.createElement("form");e.setAttribute("id","new-todo");const t=document.createElement("textarea");t.setAttribute("maxlength","20"),t.setAttribute("required","true"),t.setAttribute("name","title");const n=document.createElement("label");n.setAttribute("for","titleLabel"),n.textContent="Title: ";const o=document.createElement("textarea");o.setAttribute("maxlength","50"),o.setAttribute("name","description"),o.setAttribute("id","form-description");const r=document.createElement("label");r.setAttribute("for","descriptionLabel"),r.textContent="Description: ";const i=document.createElement("label");i.setAttribute("for","priorityLabel"),i.setAttribute("id","form-priority-label"),i.textContent="Priority Level: ";const d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("name","priority"),d.setAttribute("value","1 (low)"),d.setAttribute("checked",!0);const a=document.createElement("label");a.textContent="Low";const c=document.createElement("div");c.setAttribute("id","form-priority-container1"),c.appendChild(a),c.appendChild(d);const l=document.createElement("input");l.setAttribute("type","radio"),l.setAttribute("name","priority"),l.setAttribute("value","2 (medium)");const p=document.createElement("label");p.textContent="Medium";const s=document.createElement("div");s.setAttribute("id","form-priority-container2"),s.appendChild(p),s.appendChild(l);const u=document.createElement("input");u.setAttribute("type","radio"),u.setAttribute("name","priority"),u.setAttribute("value","3 (high)");const m=document.createElement("label");m.textContent="High";const A=document.createElement("div");A.setAttribute("id","form-priority-container3"),A.appendChild(m),A.appendChild(u);const C=document.createElement("textarea");C.setAttribute("maxlength","200"),C.setAttribute("name","notes"),C.setAttribute("id","form-notes");const h=document.createElement("label");h.setAttribute("for","notesLabel"),h.textContent="Notes: ";const b=document.createElement("input");b.setAttribute("type","date"),b.setAttribute("name","dueDate");const f=document.createElement("label");f.setAttribute("for","dueDateLabel"),f.textContent="Due Date: ";const v=document.createElement("button");return v.textContent="Create ToDo",e.appendChild(n),e.appendChild(t),e.appendChild(document.createElement("br")),e.appendChild(r),e.appendChild(o),e.appendChild(document.createElement("br")),e.appendChild(i),e.appendChild(c),e.appendChild(s),e.appendChild(A),e.appendChild(document.createElement("br")),e.appendChild(h),e.appendChild(C),e.appendChild(document.createElement("br")),e.appendChild(f),e.appendChild(b),e.appendChild(document.createElement("br")),e.appendChild(v),e}();n.removeChild(c),a.appendChild(t),t.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:r,desc:i,priority:d,notes:c,dueDate:l}=function(e){return{title:e.get("title"),desc:e.get("description"),priority:e.get("priority"),notes:e.get("notes"),dueDate:e.get("dueDate")}}(o),p=new C(r,i,l,d,c);e.todos.push(p),a.removeChild(t),h(e)}))})),n.appendChild(o),n.appendChild(r),n.appendChild(i),n.appendChild(d),n.appendChild(a),n.appendChild(c),t.appendChild(n),function(e){const t=document.getElementById("todo-container");if(Array.isArray(e.todos))for(let n=0;n<e.todos.length;n++){const o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("label");i.textContent="Item #"+(n+1)+": ";const d=document.createElement("input");d.setAttribute("type","text"),d.value=e.todos[n].title,r.appendChild(i),r.appendChild(d);const a=document.createElement("div"),c=document.createElement("label");c.textContent="Description: ";const l=document.createElement("textarea");l.setAttribute("id","todo-description"),l.value=e.todos[n].description,a.appendChild(c),a.appendChild(l);const p=document.createElement("div"),s=document.createElement("label"),u=document.createElement("div");s.textContent="Priority: ",u.textContent=e.todos[n].priority,p.appendChild(s),p.appendChild(u);const m=document.createElement("div"),A=document.createElement("label");A.textContent="Notes: ";const C=document.createElement("textarea");C.setAttribute("id","todo-notes"),C.value=e.todos[n].notes,m.appendChild(A),m.appendChild(C);const b=document.createElement("div"),f=document.createElement("label");f.textContent="Due date: ";const v=document.createElement("input");v.setAttribute("type","date"),v.value=e.todos[n].dueDate,b.appendChild(f),b.appendChild(v);const g=document.createElement("button");g.textContent="Delete ToDo",d.addEventListener("click",(()=>{const t=document.createElement("input");t.type="text",t.value=d.value,t.setAttribute("maxlength","20"),t.setAttribute("id","todo-title"),r.replaceChild(t,d),t.addEventListener("blur",(()=>{d.value=t.value,e.todos[n].title=t.value,h(e),i.textContent="Todo "+n+": "}))})),u.addEventListener("click",(()=>{const t=document.createElement("div");t.classList.add("priority-options"),["1 (low)","2 (medium)","3 (high)","Ignore"].forEach((o=>{const r=document.createElement("input");r.setAttribute("type","radio"),r.setAttribute("name","priority"),r.setAttribute("value",o),o===e.todos[n].priority&&(r.checked=!0);const i=document.createElement("label");i.textContent=o;const d=document.createElement("div");d.appendChild(r),d.appendChild(i),t.appendChild(d)})),p.replaceChild(t,u),t.addEventListener("change",(t=>{const o=t.target.value;"Ignore"!==o&&(e.todos[n].priority=o),h(e)}))})),l.addEventListener("click",(()=>{const t=document.createElement("textarea");t.value=l.value,t.setAttribute("maxlength","50"),t.setAttribute("id","todo-description"),t.setAttribute("rows","4"),a.replaceChild(t,l),t.addEventListener("blur",(()=>{l.value=t.value,e.todos[n].description=t.value,h(e)}))})),C.addEventListener("click",(()=>{const t=document.createElement("textarea");t.value=C.value,t.setAttribute("maxlength",200),t.setAttribute("id","todo-notes"),t.setAttribute("rows","6"),m.replaceChild(t,C),t.addEventListener("blur",(()=>{C.value=t.value,e.todos[n].notes=t.value,h(e)}))})),v.addEventListener("click",(()=>{const t=document.createElement("input");t.type="date",t.value=e.todos[n].dueDate,b.replaceChild(t,v),t.addEventListener("change",(()=>{v.textContent=t.value,e.todos[n].editDueDate(t.value),h(e)}))})),g.addEventListener("click",(()=>{e.todos.splice(n,1),h(e)})),o.appendChild(r),o.appendChild(a),o.appendChild(p),o.appendChild(m),o.appendChild(b),o.appendChild(g),t.appendChild(o)}}(e)}class b{constructor(e,t,n){this.title=e,this.description=t,this.completed=!1,this.todos=n||[]}markComplete(){this.completed=!0}editTitle(e){this.title=e}editDescription(e){this.description=e}addToDo(e){this.todos.push(e)}}const f=new b("First Project","It's my first project!",[]);class v{constructor(e){this.projects=e}addProject(e){this.projects.push(e)}removeProject(e){this.projects.splice(e,1)}}let g=0;function x(e){g=e}function E(){return g}function y(e){const t=document.getElementById("project-list");if(t.innerHTML="",Array.isArray(e.projects))for(let n=0;n<e.projects.length;n++){const o=e.projects[n],r=document.createElement("li");r.textContent=o.title,r.addEventListener("click",(()=>{h(o),x(n)})),t.appendChild(r)}}function I(){const e=document.createElement("form"),t=document.createElement("label");t.textContent="Title:",e.appendChild(t);const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("maxlength","20"),e.appendChild(n);const o=document.createElement("label");o.textContent="Description:",e.appendChild(o);const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("name","description"),r.setAttribute("maxlength","50"),e.appendChild(r);const i=document.createElement("button");return i.textContent="Submit",e.appendChild(i),e}function B(e){return{title:e.get("title"),description:e.get("description"),array:[]}}function j(e){const t=document.getElementById("portfolio"),n=document.createElement("h1"),o=document.createElement("div");o.setAttribute("id","portfolio-title"),n.textContent="My Portfolio",o.appendChild(n),t.appendChild(o);const r=document.createElement("ul");r.setAttribute("id","project-list"),t.appendChild(r);const i=document.createElement("button");i.id="new-project-button",i.textContent="New Project",i.addEventListener("click",(()=>{const t=I();p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l),t.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:r,description:s,array:u}=B(o),m=new b(r,s,u);e.addProject(m),p.removeChild(t),h(m),x(e.projects.length-1),y(e),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l);const A=JSON.stringify(e.projects);localStorage.setItem("projects",A)})),p.appendChild(t)}));const d=document.createElement("button");d.id="edit-project-button",d.textContent="Edit Project Title/Description",d.addEventListener("click",(()=>{const t=I();p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l),t.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:r,description:s}=B(o);let u=E();e.projects[u].title=r,e.projects[u].description=s,p.removeChild(t),y(e),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),h(e.projects[u]);const m=JSON.stringify(e.projects);localStorage.setItem("projects",m)})),p.appendChild(t)}));const a=document.createElement("button");a.id="remove-project-button",a.textContent="Delete Project",a.addEventListener("click",(()=>{if(e.projects.length>1){p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l);let t=E();e.removeProject(t),y(e),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),x(0),t=E(),h(e.projects[t]);const n=JSON.stringify(e.projects);localStorage.setItem("projects",n)}}));const c=document.createElement("button");c.id="complete-project-button",c.textContent="Change Completion Status",c.addEventListener("click",(()=>{p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l);let t=E();!0===e.projects[t].completed?e.projects[t].completed=!1:e.projects[t].completed=!0,p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),h(e.projects[t]);const n=JSON.stringify(e.projects);localStorage.setItem("projects",n)}));const l=document.createElement("button");l.id="save-project-button",l.textContent="Save Your Projects/Todos",l.addEventListener("click",(()=>{const t=JSON.stringify(e.projects);localStorage.setItem("projects",t)}));const p=document.createElement("div");p.setAttribute("id","portfolio-buttons"),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),y(e),t.appendChild(p)}!function(){const e=localStorage.getItem("projects");let t;try{t=JSON.parse(e)}catch(e){console.error(e)}if(t){const e=new v([]);e.projects=t;const n=document.getElementById("content"),o=document.createElement("div");o.id="portfolio";const r=document.createElement("div");r.id="project",n.appendChild(o),n.appendChild(r),j(e),h(e.projects[0])}else{const e=new v([]);e.addProject(f);const t=document.getElementById("content"),n=document.createElement("div");n.id="portfolio";const o=document.createElement("div");o.id="project",t.appendChild(n),t.appendChild(o),j(e),h(f)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,