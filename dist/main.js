(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),d=n.n(i)()(r());d.push([t.id,":root{\n    --button-color: rgb(138, 168, 197);\n}\n\nbody {\n    background-color: blanchedalmond;\n    margin: 0;\n}\n\ncontent {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding-top: 15px;\n}\n\n#portfolio {\n    display: flex;\n    flex-direction: column;\n}\n\n#portfolio>#portfolio-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#portfolio>#project-list {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n    font-size: 16pt;\n    padding: 10px;\n    gap: 15px;\n    --button-color: rgb(138, 168, 197);\n}\n\n#portfolio>#project-list>li:hover {\n    /* Add hover effect to buttons with --button-color */\n    background-color: var(--button-color);\n    color: white;\n}\n\n#portfolio button {\n    all:unset;\n    font-size: 13pt;\n    padding: 10px;\n    color: var(--button-color);\n}\n\n/* Add hover effect to buttons with --button-color */\n#portfolio button:hover {\n    background-color: var(--button-color);\n    color: white;\n}\n\n#project {\n    padding: 10px;\n}\n\n#project button{\n    all: unset;\n    font-size: 13pt;\n    color: var(--button-color);\n}\n\n/* Add hover effect to buttons with --button-color */\n#project button:hover {\n    background-color: var(--button-color);\n    color: white;\n}\n\n#project>#todo-container {\n    padding-top: 15px;\n    padding-bottom: 10px;\n    gap: 15px;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n\n#project>#todo-label {\n    font-size: 14pt;\n    margin-bottom: 20px;\n    gap: 10px;\n}\n\n#project>#todo-container>div{\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content:space-between;\n    height: 360px;\n    width: 280px;\n    border-radius: 15px;\n    border-left: 10px solid orange;\n    background-color: white;\n    padding: 10px;\n    gap: 10px;\n}\n\n#todo-notes,\n #todo-description {\n    width: 90%;\n    resize: vertical; /* Allow the user to resize vertically */\n}\n\n#todo-notes {\n    height: 100px;\n}\n\n#todo-description {\n    height: 40px;\n}\n\ninput[type=text] {\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#project>#todo-container>form {\n    display: flex;\n    flex-direction: column;\n    align-items:stretch;\n    justify-content:space-evenly;\n}\n#todo-container>form>#form-priority-label {\n    padding-bottom: 5px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,kCAAkC;AACtC;;AAEA;IACI,gCAAgC;IAChC,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,0BAA0B;IAC1B,2BAA2B;IAC3B,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,aAAa;IACb,SAAS;IACT,kCAAkC;AACtC;;AAEA;IACI,oDAAoD;IACpD,qCAAqC;IACrC,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,eAAe;IACf,aAAa;IACb,0BAA0B;AAC9B;;AAEA,oDAAoD;AACpD;IACI,qCAAqC;IACrC,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,eAAe;IACf,0BAA0B;AAC9B;;AAEA,oDAAoD;AACpD;IACI,qCAAqC;IACrC,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,SAAS;IACT,aAAa;IACb,eAAe;AACnB;;;AAGA;IACI,eAAe;IACf,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,0BAA0B;IAC1B,6BAA6B;IAC7B,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,8BAA8B;IAC9B,uBAAuB;IACvB,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,UAAU;IACV,gBAAgB,EAAE,wCAAwC;AAC9D;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,qBAAqB;AACzB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,4BAA4B;AAChC;AACA;IACI,mBAAmB;AACvB",sourcesContent:[":root{\n    --button-color: rgb(138, 168, 197);\n}\n\nbody {\n    background-color: blanchedalmond;\n    margin: 0;\n}\n\ncontent {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding-top: 15px;\n}\n\n#portfolio {\n    display: flex;\n    flex-direction: column;\n}\n\n#portfolio>#portfolio-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#portfolio>#project-list {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n    font-size: 16pt;\n    padding: 10px;\n    gap: 15px;\n    --button-color: rgb(138, 168, 197);\n}\n\n#portfolio>#project-list>li:hover {\n    /* Add hover effect to buttons with --button-color */\n    background-color: var(--button-color);\n    color: white;\n}\n\n#portfolio button {\n    all:unset;\n    font-size: 13pt;\n    padding: 10px;\n    color: var(--button-color);\n}\n\n/* Add hover effect to buttons with --button-color */\n#portfolio button:hover {\n    background-color: var(--button-color);\n    color: white;\n}\n\n#project {\n    padding: 10px;\n}\n\n#project button{\n    all: unset;\n    font-size: 13pt;\n    color: var(--button-color);\n}\n\n/* Add hover effect to buttons with --button-color */\n#project button:hover {\n    background-color: var(--button-color);\n    color: white;\n}\n\n#project>#todo-container {\n    padding-top: 15px;\n    padding-bottom: 10px;\n    gap: 15px;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n\n#project>#todo-label {\n    font-size: 14pt;\n    margin-bottom: 20px;\n    gap: 10px;\n}\n\n#project>#todo-container>div{\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content:space-between;\n    height: 360px;\n    width: 280px;\n    border-radius: 15px;\n    border-left: 10px solid orange;\n    background-color: white;\n    padding: 10px;\n    gap: 10px;\n}\n\n#todo-notes,\n #todo-description {\n    width: 90%;\n    resize: vertical; /* Allow the user to resize vertically */\n}\n\n#todo-notes {\n    height: 100px;\n}\n\n#todo-description {\n    height: 40px;\n}\n\ninput[type=text] {\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#project>#todo-container>form {\n    display: flex;\n    flex-direction: column;\n    align-items:stretch;\n    justify-content:space-evenly;\n}\n#todo-container>form>#form-priority-label {\n    padding-bottom: 5px;\n}"],sourceRoot:""}]);const a=d},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var l=0;l<t.length;l++){var p=[].concat(t[l]);o&&d[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},d=[],a=0;a<t.length;a++){var c=t[a],l=o.base?c[0]+o.base:c[0],p=i[l]||0,s="".concat(l," ").concat(p);i[l]=p+1;var u=n(s),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var m=r(A,o);o.byIndex=a,e.splice(a,0,{identifier:s,updater:m,references:1})}d.push(s)}return d}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var d=0;d<i.length;d++){var a=n(i[d]);e[a].references--}for(var c=o(t,r),l=0;l<i.length;l++){var p=n(i[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=c}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),i=n(569),d=n.n(i),a=n(565),c=n.n(a),l=n(216),p=n.n(l),s=n(589),u=n.n(s),A=n(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=p(),e()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;class C{constructor(t,e,n,o,r){this.title=t,this.description=e,this.priority=o,this.notes=r,this.dueDate=n,this.completed=!1}markComplete(){this.completed=!0}editTitle(t){this.title=t}editDescription(t){this.description=t}editDueDate(t){this.dueDate=t}editPriority(t){this.priority=t}editNote(t){this.note=t}}function h(t){const e=document.getElementById("content"),n=document.getElementById("project");e.removeChild(n),n.innerHTML="";const o=document.createElement("h2");o.textContent="Current project: "+t.title;const r=document.createElement("p");r.textContent=t.description;const i=document.createElement("p");!0!==t.completed?i.textContent="This project has not been completed.":i.textContent="This project has been completed.";const d=document.createElement("label");d.setAttribute("id","todo-label"),d.textContent="ToDo Items: ";const a=document.createElement("div");a.setAttribute("id","todo-container");const c=document.createElement("button");c.textContent="New ToDo",c.addEventListener("click",(()=>{const e=function(){const t=document.createElement("form");t.setAttribute("id","new-todo");const e=document.createElement("textarea");e.setAttribute("maxlength","20"),e.setAttribute("required","true"),e.setAttribute("name","title");const n=document.createElement("label");n.setAttribute("for","titleLabel"),n.textContent="Title: ";const o=document.createElement("textarea");o.setAttribute("maxlength","50"),o.setAttribute("name","description"),o.setAttribute("id","form-description");const r=document.createElement("label");r.setAttribute("for","descriptionLabel"),r.textContent="Description: ";const i=document.createElement("label");i.setAttribute("for","priorityLabel"),i.setAttribute("id","form-priority-label"),i.textContent="Priority Level: ";const d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("name","priority"),d.setAttribute("value","1 (low)"),d.setAttribute("checked",!0);const a=document.createElement("label");a.textContent="Low";const c=document.createElement("div");c.setAttribute("id","form-priority-container1"),c.appendChild(a),c.appendChild(d);const l=document.createElement("input");l.setAttribute("type","radio"),l.setAttribute("name","priority"),l.setAttribute("value","2 (medium)");const p=document.createElement("label");p.textContent="Medium";const s=document.createElement("div");s.setAttribute("id","form-priority-container2"),s.appendChild(p),s.appendChild(l);const u=document.createElement("input");u.setAttribute("type","radio"),u.setAttribute("name","priority"),u.setAttribute("value","3 (high)");const A=document.createElement("label");A.textContent="High";const m=document.createElement("div");m.setAttribute("id","form-priority-container3"),m.appendChild(A),m.appendChild(u);const C=document.createElement("textarea");C.setAttribute("maxlength","200"),C.setAttribute("name","notes"),C.setAttribute("id","form-notes");const h=document.createElement("label");h.setAttribute("for","notesLabel"),h.textContent="Notes: ";const b=document.createElement("input");b.setAttribute("type","date"),b.setAttribute("name","dueDate");const f=document.createElement("label");f.setAttribute("for","dueDateLabel"),f.textContent="Due Date: ";const v=document.createElement("button");return v.textContent="Create ToDo",t.appendChild(n),t.appendChild(e),t.appendChild(document.createElement("br")),t.appendChild(r),t.appendChild(o),t.appendChild(document.createElement("br")),t.appendChild(i),t.appendChild(c),t.appendChild(s),t.appendChild(m),t.appendChild(document.createElement("br")),t.appendChild(h),t.appendChild(C),t.appendChild(document.createElement("br")),t.appendChild(f),t.appendChild(b),t.appendChild(document.createElement("br")),t.appendChild(v),t}();n.removeChild(c),a.appendChild(e),e.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:r,desc:i,priority:d,notes:c,dueDate:l}=function(t){return{title:t.get("title"),desc:t.get("description"),priority:t.get("priority"),notes:t.get("notes"),dueDate:t.get("dueDate")}}(o),p=new C(r,i,l,d,c);t.todos.push(p),a.removeChild(e),h(t)}))})),n.appendChild(o),n.appendChild(r),n.appendChild(i),n.appendChild(d),n.appendChild(a),n.appendChild(c),e.appendChild(n),function(t){const e=document.getElementById("todo-container");if(Array.isArray(t.todos))for(let n=0;n<t.todos.length;n++){const o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("label");i.textContent="Item #"+(n+1)+": ";const d=document.createElement("input");d.setAttribute("type","text"),d.value=t.todos[n].title,r.appendChild(i),r.appendChild(d);const a=document.createElement("div"),c=document.createElement("label");c.textContent="Description: ";const l=document.createElement("textarea");l.setAttribute("id","todo-description"),l.value=t.todos[n].description,a.appendChild(c),a.appendChild(l);const p=document.createElement("div"),s=document.createElement("label"),u=document.createElement("div");s.textContent="Priority: ",u.textContent=t.todos[n].priority,p.appendChild(s),p.appendChild(u);const A=document.createElement("div"),m=document.createElement("label");m.textContent="Notes: ";const C=document.createElement("textarea");C.setAttribute("id","todo-notes"),C.value=t.todos[n].notes,A.appendChild(m),A.appendChild(C);const b=document.createElement("div"),f=document.createElement("label");f.textContent="Due date: ";const v=document.createElement("input");v.setAttribute("type","date"),v.value=t.todos[n].dueDate,b.appendChild(f),b.appendChild(v);const g=document.createElement("button");g.textContent="Delete ToDo",d.addEventListener("click",(()=>{const e=document.createElement("input");e.type="text",e.value=d.value,e.setAttribute("maxlength","20"),e.setAttribute("id","todo-title"),r.replaceChild(e,d),e.addEventListener("blur",(()=>{d.value=e.value,t.todos[n].title=e.value,h(t),i.textContent="Todo "+n+": "}))})),u.addEventListener("click",(()=>{const e=document.createElement("div");e.classList.add("priority-options"),["1 (low)","2 (medium)","3 (high)","Ignore"].forEach((o=>{const r=document.createElement("input");r.setAttribute("type","radio"),r.setAttribute("name","priority"),r.setAttribute("value",o),o===t.todos[n].priority&&(r.checked=!0);const i=document.createElement("label");i.textContent=o;const d=document.createElement("div");d.appendChild(r),d.appendChild(i),e.appendChild(d)})),p.replaceChild(e,u),e.addEventListener("change",(e=>{const o=e.target.value;"Ignore"!==o&&(t.todos[n].priority=o),h(t)}))})),l.addEventListener("click",(()=>{const e=document.createElement("textarea");e.value=l.value,e.setAttribute("maxlength","50"),e.setAttribute("id","todo-description"),e.setAttribute("rows","4"),a.replaceChild(e,l),e.addEventListener("blur",(()=>{l.value=e.value,t.todos[n].description=e.value,h(t)}))})),C.addEventListener("click",(()=>{const e=document.createElement("textarea");e.value=C.value,e.setAttribute("maxlength",200),e.setAttribute("id","todo-notes"),e.setAttribute("rows","6"),A.replaceChild(e,C),e.addEventListener("blur",(()=>{C.value=e.value,t.todos[n].notes=e.value,h(t)}))})),v.addEventListener("click",(()=>{const e=document.createElement("input");e.type="date",e.value=t.todos[n].dueDate,b.replaceChild(e,v),e.addEventListener("change",(()=>{v.textContent=e.value,t.todos[n].editDueDate(e.value),h(t)}))})),g.addEventListener("click",(()=>{t.todos.splice(n,1),h(t)})),o.appendChild(r),o.appendChild(a),o.appendChild(p),o.appendChild(A),o.appendChild(b),o.appendChild(g),e.appendChild(o)}}(t)}class b{constructor(t,e,n){this.title=t,this.description=e,this.completed=!1,this.todos=n||[]}markComplete(){this.completed=!0}editTitle(t){this.title=t}editDescription(t){this.description=t}addToDo(t){this.todos.push(t)}}const f=new b("First Project","It's my first project!",[]);class v{constructor(t){this.projects=t}addProject(t){this.projects.push(t)}removeProject(t){this.projects.splice(t,1)}}let g=0;function E(t){g=t}function x(){return g}function y(t){const e=document.getElementById("project-list");if(e.innerHTML="",Array.isArray(t.projects))for(let n=0;n<t.projects.length;n++){const o=t.projects[n],r=document.createElement("li");r.textContent=o.title,r.addEventListener("click",(()=>{h(o),E(n)})),e.appendChild(r)}}function I(){const t=document.createElement("form"),e=document.createElement("label");e.textContent="Title:",t.appendChild(e);const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("maxlength","20"),t.appendChild(n);const o=document.createElement("label");o.textContent="Description:",t.appendChild(o);const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("name","description"),r.setAttribute("maxlength","50"),t.appendChild(r);const i=document.createElement("button");return i.textContent="Submit",t.appendChild(i),t}function j(t){return{title:t.get("title"),description:t.get("description"),array:[]}}function B(t){const e=document.getElementById("portfolio"),n=document.createElement("h1"),o=document.createElement("div");o.setAttribute("id","portfolio-title"),n.textContent="My Portfolio",o.appendChild(n),e.appendChild(o);const r=document.createElement("ul");r.setAttribute("id","project-list"),e.appendChild(r);const i=document.createElement("button");i.id="new-project-button",i.textContent="New Project",i.addEventListener("click",(()=>{const e=I();p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l),e.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:r,description:s,array:u}=j(o),A=new b(r,s,u);t.addProject(A),p.removeChild(e),h(A),E(t.projects.length-1),y(t),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l);const m=JSON.stringify(t.projects);localStorage.setItem("projects",m)})),p.appendChild(e)}));const d=document.createElement("button");d.id="edit-project-button",d.textContent="Edit Project Title/Description",d.addEventListener("click",(()=>{const e=I();p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l),e.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:r,description:s}=j(o);let u=x();t.projects[u].title=r,t.projects[u].description=s,p.removeChild(e),y(t),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),h(t.projects[u]);const A=JSON.stringify(t.projects);localStorage.setItem("projects",A)})),p.appendChild(e)}));const a=document.createElement("button");a.id="remove-project-button",a.textContent="Delete Project",a.addEventListener("click",(()=>{if(t.projects.length>1){p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l);let e=x();t.removeProject(e),y(t),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),E(0),e=x(),h(t.projects[e]);const n=JSON.stringify(t.projects);localStorage.setItem("projects",n)}}));const c=document.createElement("button");c.id="complete-project-button",c.textContent="Change Completion Status",c.addEventListener("click",(()=>{p.removeChild(i),p.removeChild(d),p.removeChild(a),p.removeChild(c),p.removeChild(l);let e=x();!0===t.projects[e].completed?t.projects[e].completed=!1:t.projects[e].completed=!0,p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),h(t.projects[e]);const n=JSON.stringify(t.projects);localStorage.setItem("projects",n)}));const l=document.createElement("button");l.id="save-project-button",l.textContent="Save Your Projects/Todos",l.addEventListener("click",(()=>{const e=JSON.stringify(t.projects);localStorage.setItem("projects",e)}));const p=document.createElement("div");p.setAttribute("id","portfolio-buttons"),p.appendChild(i),p.appendChild(d),p.appendChild(a),p.appendChild(c),p.appendChild(l),y(t),e.appendChild(p)}!function(){const t=localStorage.getItem("projects");let e;try{e=JSON.parse(t)}catch(t){console.error(t)}if(e){const t=new v([]);t.projects=e;const n=document.getElementById("content"),o=document.createElement("div");o.id="portfolio";const r=document.createElement("div");r.id="project",n.appendChild(o),n.appendChild(r),B(t),h(t.projects[0])}else{const t=new v([]);t.addProject(f);const e=document.getElementById("content"),n=document.createElement("div");n.id="portfolio";const o=document.createElement("div");o.id="project",e.appendChild(n),e.appendChild(o),B(t),h(f)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,