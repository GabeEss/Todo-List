(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),i=n.n(o),r=n(645),d=n.n(r)()(i());d.push([e.id,":root{\n    --button-color: rgb(138, 168, 197);\n}\n\nbody {\n    background-color: blanchedalmond;\n    margin: 0;\n}\n\ncontent {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding-top: 15px;\n}\n\n#portfolio {\n    display: flex;\n    flex-direction: column;\n}\n\n#portfolio>#portfolio-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#portfolio>#project-list {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n    font-size: 16pt;\n    padding: 10px;\n    gap: 15px;\n}\n\n#portfolio button {\n    all:unset;\n    font-size: 13pt;\n    padding: 10px;\n    color: var(--button-color);\n}\n\n#project {\n    padding: 10px;\n}\n\n#project button{\n    all: unset;\n    font-size: 13pt;\n    color: var(--button-color);\n}\n\n#project>#todo-container {\n    padding-top: 15px;\n    padding-bottom: 10px;\n    gap: 15px;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n#new-todo {\n}\n\n#project>#todo-label {\n    font-size: 14pt;\n    margin-bottom: 20px;\n    gap: 10px;\n}\n\n#project>#todo-container>div{\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content:space-between;\n    height: 360px;\n    width: 280px;\n    border-radius: 15px;\n    border-left: 10px solid orange;\n    background-color: white;\n    padding: 10px;\n    gap: 10px;\n}\n\n#todo-notes,\n #todo-description {\n    width: 90%;\n    resize: vertical; /* Allow the user to resize vertically */\n}\n\n#todo-notes {\n    height: 100px;\n}\n\n#todo-description {\n    height: 40px;\n}\n\ninput[type=text] {\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#project>#todo-container>form {\n    display: flex;\n    flex-direction: column;\n    align-items:stretch;\n    justify-content:space-evenly;\n}\n#todo-container>form>#form-priority-label {\n    padding-bottom: 5px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,kCAAkC;AACtC;;AAEA;IACI,gCAAgC;IAChC,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,0BAA0B;IAC1B,2BAA2B;IAC3B,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,aAAa;IACb,SAAS;AACb;;AAEA;IACI,SAAS;IACT,eAAe;IACf,aAAa;IACb,0BAA0B;AAC9B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,SAAS;IACT,aAAa;IACb,eAAe;AACnB;;AAEA;AACA;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,0BAA0B;IAC1B,6BAA6B;IAC7B,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,8BAA8B;IAC9B,uBAAuB;IACvB,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,UAAU;IACV,gBAAgB,EAAE,wCAAwC;AAC9D;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,qBAAqB;AACzB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,4BAA4B;AAChC;AACA;IACI,mBAAmB;AACvB",sourcesContent:[":root{\n    --button-color: rgb(138, 168, 197);\n}\n\nbody {\n    background-color: blanchedalmond;\n    margin: 0;\n}\n\ncontent {\n    display: grid;\n    height: 100vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding-top: 15px;\n}\n\n#portfolio {\n    display: flex;\n    flex-direction: column;\n}\n\n#portfolio>#portfolio-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#portfolio>#project-list {\n    display: flex;\n    list-style: none;\n    flex-wrap: wrap;\n    font-size: 16pt;\n    padding: 10px;\n    gap: 15px;\n}\n\n#portfolio button {\n    all:unset;\n    font-size: 13pt;\n    padding: 10px;\n    color: var(--button-color);\n}\n\n#project {\n    padding: 10px;\n}\n\n#project button{\n    all: unset;\n    font-size: 13pt;\n    color: var(--button-color);\n}\n\n#project>#todo-container {\n    padding-top: 15px;\n    padding-bottom: 10px;\n    gap: 15px;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n#new-todo {\n}\n\n#project>#todo-label {\n    font-size: 14pt;\n    margin-bottom: 20px;\n    gap: 10px;\n}\n\n#project>#todo-container>div{\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content:space-between;\n    height: 360px;\n    width: 280px;\n    border-radius: 15px;\n    border-left: 10px solid orange;\n    background-color: white;\n    padding: 10px;\n    gap: 10px;\n}\n\n#todo-notes,\n #todo-description {\n    width: 90%;\n    resize: vertical; /* Allow the user to resize vertically */\n}\n\n#todo-notes {\n    height: 100px;\n}\n\n#todo-description {\n    height: 40px;\n}\n\ninput[type=text] {\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n\n#project>#todo-container>form {\n    display: flex;\n    flex-direction: column;\n    align-items:stretch;\n    justify-content:space-evenly;\n}\n#todo-container>form>#form-priority-label {\n    padding-bottom: 5px;\n}"],sourceRoot:""}]);const a=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);o&&d[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),i&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=i):p[4]="".concat(i)),t.push(p))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},d=[],a=0;a<e.length;a++){var c=e[a],l=o.base?c[0]+o.base:c[0],p=r[l]||0,s="".concat(l," ").concat(p);r[l]=p+1;var u=n(s),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=i(A,o);o.byIndex=a,t.splice(a,0,{identifier:s,updater:m,references:1})}d.push(s)}return d}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var d=0;d<r.length;d++){var a=n(r[d]);t[a].references--}for(var c=o(e,i),l=0;l<r.length;l++){var p=n(r[l]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),i=n.n(o),r=n(569),d=n.n(r),a=n(565),c=n.n(a),l=n(216),p=n.n(l),s=n(589),u=n.n(s),A=n(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=p(),t()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;class C{constructor(e,t,n,o,i){this.title=e,this.description=t,this.priority=o,this.notes=i,this.dueDate=n,this.completed=!1}markComplete(){this.completed=!0}editTitle(e){this.title=e}editDescription(e){this.description=e}editDueDate(e){this.dueDate=e}editPriority(e){this.priority=e}editNote(e){this.note=e}}function h(e){const t=document.getElementById("content"),n=document.getElementById("project");t.removeChild(n),n.innerHTML="";const o=document.createElement("h2");o.textContent="Current project: "+e.title;const i=document.createElement("p");i.textContent=e.description;const r=document.createElement("p");!0!==e.completed?r.textContent="This project has not been completed.":r.textContent="This project has been completed.";const d=document.createElement("label");d.setAttribute("id","todo-label"),d.textContent="ToDo Items: ";const a=document.createElement("div");a.setAttribute("id","todo-container");const c=document.createElement("button");c.textContent="New ToDo",c.addEventListener("click",(()=>{const t=function(){const e=document.createElement("form");e.setAttribute("id","new-todo");const t=document.createElement("textarea");t.setAttribute("maxlength","20"),t.setAttribute("required","true"),t.setAttribute("name","title");const n=document.createElement("label");n.setAttribute("for","titleLabel"),n.textContent="Title: ";const o=document.createElement("textarea");o.setAttribute("maxlength","50"),o.setAttribute("name","description"),o.setAttribute("id","form-description");const i=document.createElement("label");i.setAttribute("for","descriptionLabel"),i.textContent="Description: ";const r=document.createElement("label");r.setAttribute("for","priorityLabel"),r.setAttribute("id","form-priority-label"),r.textContent="Priority Level: ";const d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("name","priority"),d.setAttribute("value","1 (low)"),d.setAttribute("checked",!0);const a=document.createElement("label");a.textContent="Low";const c=document.createElement("div");c.setAttribute("id","form-priority-container1"),c.appendChild(a),c.appendChild(d);const l=document.createElement("input");l.setAttribute("type","radio"),l.setAttribute("name","priority"),l.setAttribute("value","2 (medium)");const p=document.createElement("label");p.textContent="Medium";const s=document.createElement("div");s.setAttribute("id","form-priority-container2"),s.appendChild(p),s.appendChild(l);const u=document.createElement("input");u.setAttribute("type","radio"),u.setAttribute("name","priority"),u.setAttribute("value","3 (high)");const A=document.createElement("label");A.textContent="High";const m=document.createElement("div");m.setAttribute("id","form-priority-container3"),m.appendChild(A),m.appendChild(u);const C=document.createElement("textarea");C.setAttribute("maxlength","200"),C.setAttribute("name","notes"),C.setAttribute("id","form-notes");const h=document.createElement("label");h.setAttribute("for","notesLabel"),h.textContent="Notes: ";const b=document.createElement("input");b.setAttribute("type","date"),b.setAttribute("name","dueDate");const f=document.createElement("label");f.setAttribute("for","dueDateLabel"),f.textContent="Due Date: ";const v=document.createElement("button");return v.textContent="Create ToDo",e.appendChild(n),e.appendChild(t),e.appendChild(document.createElement("br")),e.appendChild(i),e.appendChild(o),e.appendChild(document.createElement("br")),e.appendChild(r),e.appendChild(c),e.appendChild(s),e.appendChild(m),e.appendChild(document.createElement("br")),e.appendChild(h),e.appendChild(C),e.appendChild(document.createElement("br")),e.appendChild(f),e.appendChild(b),e.appendChild(document.createElement("br")),e.appendChild(v),e}();n.removeChild(c),a.appendChild(t),t.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:i,desc:r,priority:d,notes:c,dueDate:l}=function(e){return{title:e.get("title"),desc:e.get("description"),priority:e.get("priority"),notes:e.get("notes"),dueDate:e.get("dueDate")}}(o),p=new C(i,r,l,d,c);e.addToDo(p),a.removeChild(t),h(e)}))})),n.appendChild(o),n.appendChild(i),n.appendChild(r),n.appendChild(d),n.appendChild(a),n.appendChild(c),t.appendChild(n),function(e){const t=document.getElementById("todo-container");if(Array.isArray(e.todos))for(let n=0;n<e.todos.length;n++){const o=document.createElement("div"),i=document.createElement("div"),r=document.createElement("label");r.textContent="Item #"+(n+1)+": ";const d=document.createElement("input");d.setAttribute("type","text"),d.value=e.todos[n].title,i.appendChild(r),i.appendChild(d);const a=document.createElement("div"),c=document.createElement("label");c.textContent="Description: ";const l=document.createElement("textarea");l.setAttribute("id","todo-description"),l.value=e.todos[n].description,a.appendChild(c),a.appendChild(l);const p=document.createElement("div"),s=document.createElement("label"),u=document.createElement("div");s.textContent="Priority: ",u.textContent=e.todos[n].priority,p.appendChild(s),p.appendChild(u);const A=document.createElement("div"),m=document.createElement("label");m.textContent="Notes: ";const C=document.createElement("textarea");C.setAttribute("id","todo-notes"),C.value=e.todos[n].notes,A.appendChild(m),A.appendChild(C);const b=document.createElement("div"),f=document.createElement("label");f.textContent="Due date: ";const v=document.createElement("input");v.setAttribute("type","date"),v.value=e.todos[n].dueDate,b.appendChild(f),b.appendChild(v);const x=document.createElement("button");x.textContent="Delete ToDo",d.addEventListener("click",(()=>{const t=document.createElement("input");t.type="text",t.value=d.value,t.setAttribute("maxlength","20"),t.setAttribute("id","todo-title"),i.replaceChild(t,d),t.addEventListener("blur",(()=>{d.value=t.value,e.todos[n].editTitle(t.value),h(e),r.textContent="Todo "+n+": "}))})),u.addEventListener("click",(()=>{const t=document.createElement("div");t.classList.add("priority-options"),["1 (low)","2 (medium)","3 (high)","Ignore"].forEach((o=>{const i=document.createElement("input");i.setAttribute("type","radio"),i.setAttribute("name","priority"),i.setAttribute("value",o),o===e.todos[n].priority&&(i.checked=!0);const r=document.createElement("label");r.textContent=o;const d=document.createElement("div");d.appendChild(i),d.appendChild(r),t.appendChild(d)})),p.replaceChild(t,u),t.addEventListener("change",(t=>{const o=t.target.value;"Ignore"!==o&&(e.todos[n].priority=o),h(e)}))})),l.addEventListener("click",(()=>{const t=document.createElement("textarea");t.value=l.value,t.setAttribute("maxlength","50"),t.setAttribute("id","todo-description"),t.setAttribute("rows","4"),a.replaceChild(t,l),t.addEventListener("blur",(()=>{l.value=t.value,e.todos[n].editDescription(t.value),h(e)}))})),C.addEventListener("click",(()=>{const t=document.createElement("textarea");t.value=C.value,t.setAttribute("maxlength",200),t.setAttribute("id","todo-notes"),t.setAttribute("rows","6"),A.replaceChild(t,C),t.addEventListener("blur",(()=>{C.value=t.value,e.todos[n].notes=t.value,h(e)}))})),v.addEventListener("click",(()=>{const t=document.createElement("input");t.type="date",t.value=e.todos[n].dueDate,b.replaceChild(t,v),t.addEventListener("change",(()=>{v.textContent=t.value,e.todos[n].editDueDate(t.value),h(e)}))})),x.addEventListener("click",(()=>{e.todos.splice(n,1),h(e)})),o.appendChild(i),o.appendChild(a),o.appendChild(p),o.appendChild(A),o.appendChild(b),o.appendChild(x),t.appendChild(o)}}(e)}class b{constructor(e,t,n){this.title=e,this.description=t,this.completed=!1,this.todos=n||[]}markComplete(){this.completed=!0}editTitle(e){this.title=e}editDescription(e){this.description=e}addToDo(e){this.todos.push(e)}}const f=new b("First Project","It's my first project!",[]);let v=0;function x(e){v=e}function E(){return v}function g(e){const t=document.getElementById("project-list");if(t.innerHTML="",Array.isArray(e.projects))for(let n=0;n<e.projects.length;n++){const o=e.projects[n],i=document.createElement("li");i.textContent=o.title,i.addEventListener("click",(()=>{h(o),x(n)})),t.appendChild(i)}}function y(){const e=document.createElement("form"),t=document.createElement("label");t.textContent="Title:",e.appendChild(t);const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("maxlength","20"),e.appendChild(n);const o=document.createElement("label");o.textContent="Description:",e.appendChild(o);const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","description"),i.setAttribute("maxlength","50"),e.appendChild(i);const r=document.createElement("button");return r.textContent="Submit",e.appendChild(r),e}function I(e){return{title:e.get("title"),description:e.get("description"),array:[]}}const B=new class{constructor(e){this.projects=e}addProject(e){this.projects.push(e)}removeProject(e){this.projects.splice(e,1)}}([]);B.addProject(f);const j=document.getElementById("content"),w=document.createElement("div");w.id="portfolio";const D=document.createElement("div");D.id="project",j.appendChild(w),j.appendChild(D),function(e){const t=document.getElementById("portfolio"),n=document.createElement("h1"),o=document.createElement("div");o.setAttribute("id","portfolio-title"),n.textContent="My Portfolio",o.appendChild(n),t.appendChild(o);const i=document.createElement("ul");i.setAttribute("id","project-list"),t.appendChild(i);const r=document.createElement("button");r.id="new-project-button",r.textContent="New Project",r.addEventListener("click",(()=>{const t=y();l.removeChild(r),l.removeChild(d),l.removeChild(a),l.removeChild(c),t.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:i,description:p,array:s}=I(o),u=new b(i,p,s);e.addProject(u),l.removeChild(t),h(u),x(e.projects.length-1),g(e),l.appendChild(r),l.appendChild(d),l.appendChild(a),l.appendChild(c)})),l.appendChild(t)}));const d=document.createElement("button");d.id="edit-project-button",d.textContent="Edit Project",d.addEventListener("click",(()=>{const t=y();l.removeChild(r),l.removeChild(d),l.removeChild(a),l.removeChild(c),t.addEventListener("submit",(n=>{n.preventDefault();const o=new FormData(n.target),{title:i,description:p}=I(o);let s=E();e.projects[s].title=i,e.projects[s].description=p,l.removeChild(t),g(e),l.appendChild(r),l.appendChild(d),l.appendChild(a),l.appendChild(c),h(e.projects[s])})),l.appendChild(t)}));const a=document.createElement("button");a.id="remove-project-button",a.textContent="Delete Project",a.addEventListener("click",(()=>{if(e.projects.length>1){l.removeChild(r),l.removeChild(d),l.removeChild(a),l.removeChild(c);let t=E();e.removeProject(t),g(e),l.appendChild(r),l.appendChild(d),l.appendChild(a),l.appendChild(c),x(0),t=E(),h(e.projects[t])}}));const c=document.createElement("button");c.id="complete-project-button",c.textContent="Change Completion Status",c.addEventListener("click",(()=>{l.removeChild(r),l.removeChild(d),l.removeChild(a),l.removeChild(c);let t=E();!0===e.projects[t].completed?e.projects[t].completed=!1:e.projects[t].completed=!0,l.appendChild(r),l.appendChild(d),l.appendChild(a),l.appendChild(c),h(e.projects[t])}));const l=document.createElement("div");l.setAttribute("id","portfolio-buttons"),l.appendChild(r),l.appendChild(d),l.appendChild(a),l.appendChild(c),g(e),t.appendChild(l)}(B),h(f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Yy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdG9kby1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2Rpc3BsYXktcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbmV3LXRvZG8uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2dlbmVyYXRlVG9kb0xpc3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Byb2plY3Qtb2JqZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jcmVhdGUtZGVmYXVsdC1wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jdXJyZW50LXByb2plY3QtaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2dlbmVyYXRlUHJvamVjdExpc3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL25ldy1wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcG9ydGZvbGlvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvZGlzcGxheS1wb3J0Zm9saW8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdHtcXG4gICAgLS1idXR0b24tY29sb3I6IHJnYigxMzgsIDE2OCwgMTk3KTtcXG59XFxuXFxuYm9keSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYW5jaGVkYWxtb25kO1xcbiAgICBtYXJnaW46IDA7XFxufVxcblxcbmNvbnRlbnQge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcXG59XFxuXFxuI3BvcnRmb2xpbyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbiNwb3J0Zm9saW8+I3BvcnRmb2xpby10aXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4jcG9ydGZvbGlvPiNwcm9qZWN0LWxpc3Qge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGZvbnQtc2l6ZTogMTZwdDtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgZ2FwOiAxNXB4O1xcbn1cXG5cXG4jcG9ydGZvbGlvIGJ1dHRvbiB7XFxuICAgIGFsbDp1bnNldDtcXG4gICAgZm9udC1zaXplOiAxM3B0O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBjb2xvcjogdmFyKC0tYnV0dG9uLWNvbG9yKTtcXG59XFxuXFxuI3Byb2plY3Qge1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG4jcHJvamVjdCBidXR0b257XFxuICAgIGFsbDogdW5zZXQ7XFxuICAgIGZvbnQtc2l6ZTogMTNwdDtcXG4gICAgY29sb3I6IHZhcigtLWJ1dHRvbi1jb2xvcik7XFxufVxcblxcbiNwcm9qZWN0PiN0b2RvLWNvbnRhaW5lciB7XFxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG4gICAgZ2FwOiAxNXB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxufVxcblxcbiNuZXctdG9kbyB7XFxufVxcblxcbiNwcm9qZWN0PiN0b2RvLWxhYmVsIHtcXG4gICAgZm9udC1zaXplOiAxNHB0O1xcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbiNwcm9qZWN0PiN0b2RvLWNvbnRhaW5lcj5kaXZ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtcXG4gICAgaGVpZ2h0OiAzNjBweDtcXG4gICAgd2lkdGg6IDI4MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBib3JkZXItbGVmdDogMTBweCBzb2xpZCBvcmFuZ2U7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbiN0b2RvLW5vdGVzLFxcbiAjdG9kby1kZXNjcmlwdGlvbiB7XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIHJlc2l6ZTogdmVydGljYWw7IC8qIEFsbG93IHRoZSB1c2VyIHRvIHJlc2l6ZSB2ZXJ0aWNhbGx5ICovXFxufVxcblxcbiN0b2RvLW5vdGVzIHtcXG4gICAgaGVpZ2h0OiAxMDBweDtcXG59XFxuXFxuI3RvZG8tZGVzY3JpcHRpb24ge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxufVxcblxcbmlucHV0W3R5cGU9dGV4dF0ge1xcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XFxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcXG59XFxuXFxuXFxuI3Byb2plY3Q+I3RvZG8tY29udGFpbmVyPmZvcm0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczpzdHJldGNoO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtZXZlbmx5O1xcbn1cXG4jdG9kby1jb250YWluZXI+Zm9ybT4jZm9ybS1wcmlvcml0eS1sYWJlbCB7XFxuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxnQ0FBZ0M7SUFDaEMsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGFBQWE7SUFDYiwwQkFBMEI7SUFDMUIsMkJBQTJCO0lBQzNCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGVBQWU7SUFDZixhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBO0lBQ0ksU0FBUztJQUNULGVBQWU7SUFDZixhQUFhO0lBQ2IsMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixlQUFlO0lBQ2YsMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7QUFDbkI7O0FBRUE7QUFDQTs7QUFFQTtJQUNJLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QiwwQkFBMEI7SUFDMUIsNkJBQTZCO0lBQzdCLGFBQWE7SUFDYixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5Qix1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLFNBQVM7QUFDYjs7QUFFQTs7SUFFSSxVQUFVO0lBQ1YsZ0JBQWdCLEVBQUUsd0NBQXdDO0FBQzlEOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIscUJBQXFCO0FBQ3pCOzs7QUFHQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLDRCQUE0QjtBQUNoQztBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290e1xcbiAgICAtLWJ1dHRvbi1jb2xvcjogcmdiKDEzOCwgMTY4LCAxOTcpO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhbmNoZWRhbG1vbmQ7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuY29udGVudCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XFxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xcbn1cXG5cXG4jcG9ydGZvbGlvIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI3BvcnRmb2xpbz4jcG9ydGZvbGlvLXRpdGxlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbiNwb3J0Zm9saW8+I3Byb2plY3QtbGlzdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZm9udC1zaXplOiAxNnB0O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBnYXA6IDE1cHg7XFxufVxcblxcbiNwb3J0Zm9saW8gYnV0dG9uIHtcXG4gICAgYWxsOnVuc2V0O1xcbiAgICBmb250LXNpemU6IDEzcHQ7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGNvbG9yOiB2YXIoLS1idXR0b24tY29sb3IpO1xcbn1cXG5cXG4jcHJvamVjdCB7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbiNwcm9qZWN0IGJ1dHRvbntcXG4gICAgYWxsOiB1bnNldDtcXG4gICAgZm9udC1zaXplOiAxM3B0O1xcbiAgICBjb2xvcjogdmFyKC0tYnV0dG9uLWNvbG9yKTtcXG59XFxuXFxuI3Byb2plY3Q+I3RvZG8tY29udGFpbmVyIHtcXG4gICAgcGFkZGluZy10b3A6IDE1cHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbiAgICBnYXA6IDE1cHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG59XFxuXFxuI25ldy10b2RvIHtcXG59XFxuXFxuI3Byb2plY3Q+I3RvZG8tbGFiZWwge1xcbiAgICBmb250LXNpemU6IDE0cHQ7XFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI3Byb2plY3Q+I3RvZG8tY29udGFpbmVyPmRpdntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IHNwYWNlLWJldHdlZW47XFxuICAgIGp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO1xcbiAgICBoZWlnaHQ6IDM2MHB4O1xcbiAgICB3aWR0aDogMjgwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICAgIGJvcmRlci1sZWZ0OiAxMHB4IHNvbGlkIG9yYW5nZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI3RvZG8tbm90ZXMsXFxuICN0b2RvLWRlc2NyaXB0aW9uIHtcXG4gICAgd2lkdGg6IDkwJTtcXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDsgLyogQWxsb3cgdGhlIHVzZXIgdG8gcmVzaXplIHZlcnRpY2FsbHkgKi9cXG59XFxuXFxuI3RvZG8tbm90ZXMge1xcbiAgICBoZWlnaHQ6IDEwMHB4O1xcbn1cXG5cXG4jdG9kby1kZXNjcmlwdGlvbiB7XFxuICAgIGhlaWdodDogNDBweDtcXG59XFxuXFxuaW5wdXRbdHlwZT10ZXh0XSB7XFxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcXG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xcbn1cXG5cXG5cXG4jcHJvamVjdD4jdG9kby1jb250YWluZXI+Zm9ybSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOnN0cmV0Y2g7XFxuICAgIGp1c3RpZnktY29udGVudDpzcGFjZS1ldmVubHk7XFxufVxcbiN0b2RvLWNvbnRhaW5lcj5mb3JtPiNmb3JtLXByaW9yaXR5LWxhYmVsIHtcXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kbyB7XG5cbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBub3Rlcykge1xuICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgICAgdGhpcy5ub3RlcyA9IG5vdGVzO1xuICAgICAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcbiAgICAgIHRoaXMuY29tcGxldGVkID0gZmFsc2U7XG4gICAgfVxuICBcbiAgICBtYXJrQ29tcGxldGUoKSB7XG4gICAgICB0aGlzLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgfVxuICBcbiAgICBlZGl0VGl0bGUobmV3VGl0bGUpIHtcbiAgICAgIHRoaXMudGl0bGUgPSBuZXdUaXRsZTtcbiAgICB9XG4gIFxuICAgIGVkaXREZXNjcmlwdGlvbihuZXdEZXNjcmlwdGlvbikge1xuICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IG5ld0Rlc2NyaXB0aW9uO1xuICAgIH1cbiAgXG4gICAgZWRpdER1ZURhdGUobmV3RHVlRGF0ZSkge1xuICAgICAgdGhpcy5kdWVEYXRlID0gbmV3RHVlRGF0ZTtcbiAgICB9XG4gIFxuICAgIGVkaXRQcmlvcml0eShuZXdQcmlvcml0eSkge1xuICAgICAgdGhpcy5wcmlvcml0eSA9IG5ld1ByaW9yaXR5O1xuICAgIH1cbiAgXG4gICAgZWRpdE5vdGUobmV3Tm90ZSkge1xuICAgICAgdGhpcy5ub3RlID0gbmV3Tm90ZTtcbiAgICB9XG4gIH1cbiAgIiwiaW1wb3J0IFRvZG8gZnJvbSBcIi4vdG9kby1vYmplY3RcIjtcbmltcG9ydCB7IG5ld1RvRG9Gb3JtIH0gZnJvbSBcIi4vbmV3LXRvZG9cIjtcbmltcG9ydCB7IGhhbmRsZVRvZG9Gb3JtU3VibWl0IH0gZnJvbSBcIi4vbmV3LXRvZG9cIjtcbmltcG9ydCBnZW5lcmF0ZVRvRG8gZnJvbSBcIi4vZ2VuZXJhdGVUb2RvTGlzdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXNwbGF5UHJvamVjdChwcm9qZWN0KSB7XG4gICAgY29uc3QgbWFpbkNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jyk7XG4gICAgY29uc3QgbmV3UHJvaiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0Jyk7XG4gICAgbWFpbkNvbnRhaW5lci5yZW1vdmVDaGlsZChuZXdQcm9qKTsgLy8gcmVtb3ZlIHRoZSBjdXJyZW50IHByb2plY3QgZnJvbSB0aGUgbWFpbiBjb250YWluZXJcbiAgICBuZXdQcm9qLmlubmVySFRNTCA9IFwiXCI7IC8vIHJlc2V0IHRoZSBjdXJyZW50IHByb2plY3QgY29udGFpbmVyXG5cbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBcIkN1cnJlbnQgcHJvamVjdDogXCIgKyBwcm9qZWN0LnRpdGxlOyAvLyBzZXQgdGhlIHRpdGxlIGFzIHRoZSB0ZXh0IGNvbnRlbnRcblxuICAgIC8vIGNyZWF0ZSBhIHBhcmFncmFwaCBlbGVtZW50IHRvIHNob3cgdGhlIGRlc2NyaXB0aW9uXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBwcm9qZWN0LmRlc2NyaXB0aW9uO1xuXG4gICAgY29uc3QgY29tcGxldGVkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGlmKHByb2plY3QuY29tcGxldGVkICE9PSB0cnVlKVxuICAgICAgICBjb21wbGV0ZWQudGV4dENvbnRlbnQgPSBcIlRoaXMgcHJvamVjdCBoYXMgbm90IGJlZW4gY29tcGxldGVkLlwiO1xuICAgIGVsc2VcbiAgICAgICAgY29tcGxldGVkLnRleHRDb250ZW50ID0gXCJUaGlzIHByb2plY3QgaGFzIGJlZW4gY29tcGxldGVkLlwiO1xuXG4gICAgY29uc3QgdG9Eb0xpc3RMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgdG9Eb0xpc3RMYWJlbC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvZG8tbGFiZWwnKTtcbiAgICB0b0RvTGlzdExhYmVsLnRleHRDb250ZW50ID0gXCJUb0RvIEl0ZW1zOiBcIjtcblxuICAgIGNvbnN0IHRvRG9MaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdG9Eb0xpc3Quc2V0QXR0cmlidXRlKCdpZCcsICd0b2RvLWNvbnRhaW5lcicpO1xuICAgIFxuICAgIGNvbnN0IG5ld1RvRG9CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBuZXdUb0RvQnV0dG9uLnRleHRDb250ZW50ID0gXCJOZXcgVG9Eb1wiO1xuICAgIG5ld1RvRG9CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IFxuICAgICAgICBjb25zdCBmb3JtID0gbmV3VG9Eb0Zvcm0oKTtcbiAgICAgICAgbmV3UHJvai5yZW1vdmVDaGlsZChuZXdUb0RvQnV0dG9uKTtcbiAgICAgICAgdG9Eb0xpc3QuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgICAgIGNvbnN0IHsgdGl0bGUsIGRlc2MsIHByaW9yaXR5LCBub3RlcywgZHVlRGF0ZSB9ID0gaGFuZGxlVG9kb0Zvcm1TdWJtaXQoZm9ybURhdGEpO1xuICAgICAgICAgICAgY29uc3QgbmV3VG9Eb0l0ZW0gPSBuZXcgVG9kbyh0aXRsZSwgZGVzYywgZHVlRGF0ZSwgcHJpb3JpdHksIG5vdGVzKTtcbiAgICAgICAgICAgIHByb2plY3QuYWRkVG9EbyhuZXdUb0RvSXRlbSk7XG4gICAgICAgICAgICB0b0RvTGlzdC5yZW1vdmVDaGlsZChmb3JtKTtcbiAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0KHByb2plY3QpO1xuICAgICAgICB9KVxuICAgIH0pO1xuXG4gICAgLy8gc2V0IGNvbXBsZXRlZCBidXR0b24gZm9yIHByb2plY3QgKG1heWJlIGNhbiBnbyBpbiBwb3J0Zm9saW8gZGlzcGxheSlcblxuICAgIC8vIGFwcGVuZCB0byB0aGUgbmV3UHJvaiBlbGVtZW50XG4gICAgbmV3UHJvai5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgbmV3UHJvai5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbik7XG4gICAgbmV3UHJvai5hcHBlbmRDaGlsZChjb21wbGV0ZWQpO1xuICAgIG5ld1Byb2ouYXBwZW5kQ2hpbGQodG9Eb0xpc3RMYWJlbCk7XG4gICAgbmV3UHJvai5hcHBlbmRDaGlsZCh0b0RvTGlzdCk7XG4gICAgbmV3UHJvai5hcHBlbmRDaGlsZChuZXdUb0RvQnV0dG9uKTtcbiAgICBtYWluQ29udGFpbmVyLmFwcGVuZENoaWxkKG5ld1Byb2opOyAvLyBhcHBlbmQgdGhlIGN1cnJlbnQgY2hpbGQgdG8gdGhlIG1haW4gY29udGFpbmVyXG4gICAgZ2VuZXJhdGVUb0RvKHByb2plY3QpO1xufSIsIi8vIFRoaXMgaXMgYSBmb3JtIHRoYXQgaXMgZGlzcGxheWVkIHRvIGdhdGhlciBpbmZvcm1hdGlvbiB0byBjcmVhdGUgYSBuZXcgVG9kbyBvYmplY3QuXG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdUb0RvRm9ybSgpIHtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICAgIGZvcm0uc2V0QXR0cmlidXRlKCdpZCcsICduZXctdG9kbycpOyBcblxuICAgIGNvbnN0IGZvcm1UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgZm9ybVRpdGxlLnNldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJywgJzIwJyk7IC8vIGNoYXJhY3RlciBsaW1pdFxuICAgIGZvcm1UaXRsZS5zZXRBdHRyaWJ1dGUoJ3JlcXVpcmVkJywgJ3RydWUnKTtcbiAgICBmb3JtVGl0bGUuc2V0QXR0cmlidXRlKCduYW1lJywgJ3RpdGxlJyk7XG4gICAgY29uc3QgdGl0bGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgdGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0aXRsZUxhYmVsJyk7XG4gICAgdGl0bGVMYWJlbC50ZXh0Q29udGVudCA9IFwiVGl0bGU6IFwiO1xuXG4gICAgY29uc3QgZm9ybURlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICAgIGZvcm1EZXNjLnNldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJywgJzUwJyk7IC8vIGNoYXJhY3RlciBsaW1pdFxuICAgIGZvcm1EZXNjLnNldEF0dHJpYnV0ZSgnbmFtZScsICdkZXNjcmlwdGlvbicpO1xuICAgIGZvcm1EZXNjLnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9ybS1kZXNjcmlwdGlvbicpO1xuICAgIGNvbnN0IGRlc2NMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgZGVzY0xhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2Rlc2NyaXB0aW9uTGFiZWwnKTtcbiAgICBkZXNjTGFiZWwudGV4dENvbnRlbnQgPSBcIkRlc2NyaXB0aW9uOiBcIjtcblxuICAgIGNvbnN0IHByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHByaW9yaXR5TGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAncHJpb3JpdHlMYWJlbCcpO1xuICAgIHByaW9yaXR5TGFiZWwuc2V0QXR0cmlidXRlKCdpZCcsICdmb3JtLXByaW9yaXR5LWxhYmVsJyk7XG4gICAgcHJpb3JpdHlMYWJlbC50ZXh0Q29udGVudCA9IFwiUHJpb3JpdHkgTGV2ZWw6IFwiO1xuXG4gICAgY29uc3QgcHJpb3JpdHlMZXZlbDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHByaW9yaXR5TGV2ZWwxLnNldEF0dHJpYnV0ZSgndHlwZScsICdyYWRpbycpO1xuICAgIHByaW9yaXR5TGV2ZWwxLnNldEF0dHJpYnV0ZSgnbmFtZScsICdwcmlvcml0eScpO1xuICAgIHByaW9yaXR5TGV2ZWwxLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnMSAobG93KScpO1xuICAgIHByaW9yaXR5TGV2ZWwxLnNldEF0dHJpYnV0ZSgnY2hlY2tlZCcsIHRydWUpOyAvLyBkZWZhdWx0IHNlbGVjdGlvblxuICAgIGNvbnN0IHByaW9yaXR5TGFiZWwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBwcmlvcml0eUxhYmVsMS50ZXh0Q29udGVudCA9IFwiTG93XCI7XG4gICAgY29uc3QgcHJpb3JpdHlDb250YWluZXIxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcHJpb3JpdHlDb250YWluZXIxLnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9ybS1wcmlvcml0eS1jb250YWluZXIxJyk7XG4gICAgcHJpb3JpdHlDb250YWluZXIxLmFwcGVuZENoaWxkKHByaW9yaXR5TGFiZWwxKTtcbiAgICBwcmlvcml0eUNvbnRhaW5lcjEuYXBwZW5kQ2hpbGQocHJpb3JpdHlMZXZlbDEpO1xuXG4gICAgY29uc3QgcHJpb3JpdHlMZXZlbDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHByaW9yaXR5TGV2ZWwyLnNldEF0dHJpYnV0ZSgndHlwZScsICdyYWRpbycpO1xuICAgIHByaW9yaXR5TGV2ZWwyLnNldEF0dHJpYnV0ZSgnbmFtZScsICdwcmlvcml0eScpO1xuICAgIHByaW9yaXR5TGV2ZWwyLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnMiAobWVkaXVtKScpO1xuICAgIGNvbnN0IHByaW9yaXR5TGFiZWwyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBwcmlvcml0eUxhYmVsMi50ZXh0Q29udGVudCA9IFwiTWVkaXVtXCI7XG4gICAgY29uc3QgcHJpb3JpdHlDb250YWluZXIyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcHJpb3JpdHlDb250YWluZXIyLnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9ybS1wcmlvcml0eS1jb250YWluZXIyJyk7XG4gICAgcHJpb3JpdHlDb250YWluZXIyLmFwcGVuZENoaWxkKHByaW9yaXR5TGFiZWwyKTtcbiAgICBwcmlvcml0eUNvbnRhaW5lcjIuYXBwZW5kQ2hpbGQocHJpb3JpdHlMZXZlbDIpO1xuXG4gICAgY29uc3QgcHJpb3JpdHlMZXZlbDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHByaW9yaXR5TGV2ZWwzLnNldEF0dHJpYnV0ZSgndHlwZScsICdyYWRpbycpO1xuICAgIHByaW9yaXR5TGV2ZWwzLnNldEF0dHJpYnV0ZSgnbmFtZScsICdwcmlvcml0eScpO1xuICAgIHByaW9yaXR5TGV2ZWwzLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnMyAoaGlnaCknKTtcbiAgICBjb25zdCBwcmlvcml0eUxhYmVsMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgcHJpb3JpdHlMYWJlbDMudGV4dENvbnRlbnQgPSBcIkhpZ2hcIjtcbiAgICBjb25zdCBwcmlvcml0eUNvbnRhaW5lcjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBwcmlvcml0eUNvbnRhaW5lcjMuc2V0QXR0cmlidXRlKCdpZCcsICdmb3JtLXByaW9yaXR5LWNvbnRhaW5lcjMnKTtcbiAgICBwcmlvcml0eUNvbnRhaW5lcjMuYXBwZW5kQ2hpbGQocHJpb3JpdHlMYWJlbDMpO1xuICAgIHByaW9yaXR5Q29udGFpbmVyMy5hcHBlbmRDaGlsZChwcmlvcml0eUxldmVsMyk7XG5cbiAgICBjb25zdCBmb3JtTm90ZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICAgIGZvcm1Ob3Rlcy5zZXRBdHRyaWJ1dGUoJ21heGxlbmd0aCcsICcyMDAnKTsgLy8gY2hhcmFjdGVyIGxpbWl0XG4gICAgZm9ybU5vdGVzLnNldEF0dHJpYnV0ZSgnbmFtZScsICdub3RlcycpO1xuICAgIGZvcm1Ob3Rlcy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Zvcm0tbm90ZXMnKTtcbiAgICBjb25zdCBub3Rlc0xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBub3Rlc0xhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ25vdGVzTGFiZWwnKTtcbiAgICBub3Rlc0xhYmVsLnRleHRDb250ZW50ID0gXCJOb3RlczogXCI7XG5cbiAgICBjb25zdCBmb3JtRHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgZm9ybUR1ZURhdGUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2RhdGUnKTtcbiAgICBmb3JtRHVlRGF0ZS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnZHVlRGF0ZScpXG4gICAgY29uc3QgZHVlZGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBkdWVkYXRlTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAnZHVlRGF0ZUxhYmVsJyk7XG4gICAgZHVlZGF0ZUxhYmVsLnRleHRDb250ZW50ID0gXCJEdWUgRGF0ZTogXCI7XG5cbiAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkNyZWF0ZSBUb0RvXCI7XG5cbiAgICAvLyBjb25zdCBjYW5jZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAvLyBjYW5jZWxCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICAgIC8vIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2FuY2VsXCI7XG4gICAgLy8gY2FuY2VsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4geyBcbiAgICAvLyAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gcHJldmVudCB0aGUgZm9ybSBmcm9tIHN1Ym1pdHRpbmdcbiAgICAvLyB9KTtcblxuICAgIC8vIGFwcGVuZCB0aGUgZWxlbWVudHMgdG8gdGhlIGZvcm1cbiAgICBmb3JtLmFwcGVuZENoaWxkKHRpdGxlTGFiZWwpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZm9ybVRpdGxlKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZGVzY0xhYmVsKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGZvcm1EZXNjKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQocHJpb3JpdHlMYWJlbCk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChwcmlvcml0eUNvbnRhaW5lcjEpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQocHJpb3JpdHlDb250YWluZXIyKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKHByaW9yaXR5Q29udGFpbmVyMyk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKG5vdGVzTGFiZWwpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZm9ybU5vdGVzKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZHVlZGF0ZUxhYmVsKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGZvcm1EdWVEYXRlKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoc3VibWl0QnV0dG9uKTtcbiAgICAvLyBmb3JtLmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbik7XG5cbiAgICByZXR1cm4gZm9ybTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVRvZG9Gb3JtU3VibWl0KGZvcm1EYXRhKVxue1xuICAgIGNvbnN0IHRpdGxlID0gZm9ybURhdGEuZ2V0KCd0aXRsZScpO1xuICAgIGNvbnN0IGRlc2MgPSBmb3JtRGF0YS5nZXQoJ2Rlc2NyaXB0aW9uJyk7XG4gICAgY29uc3QgcHJpb3JpdHkgPSBmb3JtRGF0YS5nZXQoJ3ByaW9yaXR5Jyk7XG4gICAgY29uc3Qgbm90ZXMgPSBmb3JtRGF0YS5nZXQoJ25vdGVzJyk7XG4gICAgY29uc3QgZHVlRGF0ZSA9IGZvcm1EYXRhLmdldCgnZHVlRGF0ZScpO1xuXG4gICAgcmV0dXJuIHsgdGl0bGUsIGRlc2MsIHByaW9yaXR5LCBub3RlcywgZHVlRGF0ZSB9O1xufSIsImltcG9ydCBkaXNwbGF5UHJvamVjdCBmcm9tIFwiLi9kaXNwbGF5LXByb2plY3RcIjtcblxuLy8gR2VuZXJhdGVzIHRoZSBET00gZWxlbWVudHMgYW5kIGNsaWNrIGV2ZW50cyBmb3IgZWFjaCB0b2RvIGl0ZW0gd2l0aGluIGEgcHJvamVjdC5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2VuZXJhdGVUb0RvKHByb2plY3QpIHtcbiAgICBjb25zdCB0b0RvTGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2RvLWNvbnRhaW5lcicpO1xuXG4gICAgaWYoQXJyYXkuaXNBcnJheShwcm9qZWN0LnRvZG9zKSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3QudG9kb3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgICAgICAgIC8vIFRvZG8gVGl0bGUgQ29udGFpbmVyXG4gICAgICAgICAgICBjb25zdCB0b0RvVGl0bGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9UaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIHRvRG9UaXRsZUxhYmVsLnRleHRDb250ZW50ID0gXCJJdGVtICNcIiArIChpICsgMSkgKyBcIjogXCI7XG4gICAgICAgICAgICBjb25zdCB0b0RvVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgdG9Eb1RpdGxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgICAgICAgICB0b0RvVGl0bGUudmFsdWUgPSBwcm9qZWN0LnRvZG9zW2ldLnRpdGxlO1xuICAgICAgICAgICAgdG9Eb1RpdGxlQ29udGFpbmVyLmFwcGVuZENoaWxkKHRvRG9UaXRsZUxhYmVsKTtcbiAgICAgICAgICAgIHRvRG9UaXRsZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0b0RvVGl0bGUpO1xuXG4gICAgICAgICAgICAvLyBUb2RvIERlc2NyaXB0aW9uIENvbnRhaW5lclxuICAgICAgICAgICAgY29uc3QgdG9Eb0Rlc2NyaXB0aW9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBjb25zdCB0b0RvRGVzY3JpcHRpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgICAgICB0b0RvRGVzY3JpcHRpb25MYWJlbC50ZXh0Q29udGVudCA9IFwiRGVzY3JpcHRpb246IFwiO1xuICAgICAgICAgICAgY29uc3QgdG9Eb0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAgICAgICAgIHRvRG9EZXNjcmlwdGlvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvZG8tZGVzY3JpcHRpb24nKTtcbiAgICAgICAgICAgIHRvRG9EZXNjcmlwdGlvbi52YWx1ZSA9IHByb2plY3QudG9kb3NbaV0uZGVzY3JpcHRpb247XG4gICAgICAgICAgICB0b0RvRGVzY3JpcHRpb25Db250YWluZXIuYXBwZW5kQ2hpbGQodG9Eb0Rlc2NyaXB0aW9uTGFiZWwpO1xuICAgICAgICAgICAgdG9Eb0Rlc2NyaXB0aW9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHRvRG9EZXNjcmlwdGlvbik7XG5cbiAgICAgICAgICAgIC8vIFRvZG8gUHJpb3JpdHkgQ29udGFpbmVyXG4gICAgICAgICAgICBjb25zdCB0b0RvUHJpb3JpdHlDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9Qcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9Qcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgICAgICAgICB0b0RvUHJpb3JpdHlMYWJlbC50ZXh0Q29udGVudCA9IFwiUHJpb3JpdHk6IFwiO1xuICAgICAgICAgICAgdG9Eb1ByaW9yaXR5LnRleHRDb250ZW50ID0gcHJvamVjdC50b2Rvc1tpXS5wcmlvcml0eTtcbiAgICAgICAgICAgIHRvRG9Qcmlvcml0eUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0b0RvUHJpb3JpdHlMYWJlbCk7XG4gICAgICAgICAgICB0b0RvUHJpb3JpdHlDb250YWluZXIuYXBwZW5kQ2hpbGQodG9Eb1ByaW9yaXR5KTtcblxuICAgICAgICAgICAgLy8gVG9kbyBOb3RlcyBDb250YWluZXJcbiAgICAgICAgICAgIGNvbnN0IHRvRG9Ob3Rlc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgY29uc3QgdG9Eb05vdGVzTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICAgICAgdG9Eb05vdGVzTGFiZWwudGV4dENvbnRlbnQgPSBcIk5vdGVzOiBcIjtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9Ob3RlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgICAgICAgICB0b0RvTm90ZXMuc2V0QXR0cmlidXRlKCdpZCcsICd0b2RvLW5vdGVzJyk7XG4gICAgICAgICAgICB0b0RvTm90ZXMudmFsdWUgPSBwcm9qZWN0LnRvZG9zW2ldLm5vdGVzO1xuICAgICAgICAgICAgdG9Eb05vdGVzQ29udGFpbmVyLmFwcGVuZENoaWxkKHRvRG9Ob3Rlc0xhYmVsKTtcbiAgICAgICAgICAgIHRvRG9Ob3Rlc0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0b0RvTm90ZXMpO1xuXG4gICAgICAgICAgICAvLyBUb2RvIER1ZSBEYXRlIENvbnRhaW5lclxuICAgICAgICAgICAgY29uc3QgdG9Eb0R1ZURhdGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9EdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICAgICAgdG9Eb0R1ZURhdGVMYWJlbC50ZXh0Q29udGVudCA9IFwiRHVlIGRhdGU6IFwiO1xuICAgICAgICAgICAgY29uc3QgdG9Eb0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgdG9Eb0R1ZURhdGUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2RhdGUnKTtcbiAgICAgICAgICAgIHRvRG9EdWVEYXRlLnZhbHVlID0gcHJvamVjdC50b2Rvc1tpXS5kdWVEYXRlO1xuICAgICAgICAgICAgdG9Eb0R1ZURhdGVDb250YWluZXIuYXBwZW5kQ2hpbGQodG9Eb0R1ZURhdGVMYWJlbCk7XG4gICAgICAgICAgICB0b0RvRHVlRGF0ZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0b0RvRHVlRGF0ZSk7XG5cbiAgICAgICAgICAgIC8vIFRvZG8gUmVtb3ZlIEJ1dHRvblxuICAgICAgICAgICAgY29uc3QgdG9Eb1JlbW92ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgICAgdG9Eb1JlbW92ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiRGVsZXRlIFRvRG9cIjtcblxuICAgICAgICAgICAgLy8gVGl0bGUgRXZlbnRcbiAgICAgICAgICAgIHRvRG9UaXRsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICAgICAgaW5wdXQudHlwZSA9ICd0ZXh0JztcbiAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IHRvRG9UaXRsZS52YWx1ZTtcblxuICAgICAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJywgJzIwJyk7XG4gICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICd0b2RvLXRpdGxlJyk7XG5cbiAgICAgICAgICAgICAgICB0b0RvVGl0bGVDb250YWluZXIucmVwbGFjZUNoaWxkKGlucHV0LCB0b0RvVGl0bGUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdG9Eb1RpdGxlLnZhbHVlID0gaW5wdXQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3QudG9kb3NbaV0uZWRpdFRpdGxlKGlucHV0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheVByb2plY3QocHJvamVjdCk7XG4gICAgICAgICAgICAgICAgICAgIHRvRG9UaXRsZUxhYmVsLnRleHRDb250ZW50ID0gXCJUb2RvIFwiICsgaSArIFwiOiBcIjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBQcmlvcml0eSBFdmVudFxuICAgICAgICAgICAgdG9Eb1ByaW9yaXR5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5T3B0aW9ucyA9IFsnMSAobG93KScsICcyIChtZWRpdW0pJywgJzMgKGhpZ2gpJywgJ0lnbm9yZSddO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgcmFkaW8gYnV0dG9ucyBmb3IgZWFjaCBwcmlvcml0eSBvcHRpb25cbiAgICAgICAgICAgICAgICBjb25zdCByYWRpb0J1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICByYWRpb0J1dHRvbnMuY2xhc3NMaXN0LmFkZCgncHJpb3JpdHktb3B0aW9ucycpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBwcmlvcml0eU9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCByYWRpb0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICAgICAgICByYWRpb0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAncmFkaW8nKTtcbiAgICAgICAgICAgICAgICAgIHJhZGlvQnV0dG9uLnNldEF0dHJpYnV0ZSgnbmFtZScsICdwcmlvcml0eScpO1xuICAgICAgICAgICAgICAgICAgcmFkaW9CdXR0b24uc2V0QXR0cmlidXRlKCd2YWx1ZScsIG9wdGlvbik7XG4gICAgICAgICAgICAgICAgICBpZiAob3B0aW9uID09PSBwcm9qZWN0LnRvZG9zW2ldLnByaW9yaXR5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJhZGlvQnV0dG9uLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gb3B0aW9uO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHJhZGlvQnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICByYWRpb0J1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChyYWRpb0J1dHRvbik7XG4gICAgICAgICAgICAgICAgICByYWRpb0J1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgcmFkaW9CdXR0b25zLmFwcGVuZENoaWxkKHJhZGlvQnV0dG9uQ29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gUmVwbGFjZSB0aGUgcHJpb3JpdHkgY29udGFpbmVyIHdpdGggdGhlIHJhZGlvIGJ1dHRvbnNcbiAgICAgICAgICAgICAgICB0b0RvUHJpb3JpdHlDb250YWluZXIucmVwbGFjZUNoaWxkKHJhZGlvQnV0dG9ucywgdG9Eb1ByaW9yaXR5KTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBwcmlvcml0eSB2YWx1ZSBvZiB0aGUgdG9kbyBvYmplY3Qgd2hlbiB0aGUgdXNlciBtYWtlcyBhIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgIHJhZGlvQnV0dG9ucy5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3UHJpb3JpdHkgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdQcmlvcml0eSAhPT0gJ0lnbm9yZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3QudG9kb3NbaV0ucHJpb3JpdHkgPSBuZXdQcmlvcml0eTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5UHJvamVjdChwcm9qZWN0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBEZXNjcmlwdGlvbiBFdmVudFxuICAgICAgICAgICAgdG9Eb0Rlc2NyaXB0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRleHRhcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAgICAgICAgICAgICB0ZXh0YXJlYS52YWx1ZSA9IHRvRG9EZXNjcmlwdGlvbi52YWx1ZTtcbiAgICAgICAgICAgICAgICB0ZXh0YXJlYS5zZXRBdHRyaWJ1dGUoJ21heGxlbmd0aCcsICc1MCcpO1xuICAgICAgICAgICAgICAgIHRleHRhcmVhLnNldEF0dHJpYnV0ZSgnaWQnLCAndG9kby1kZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgICAgIHRleHRhcmVhLnNldEF0dHJpYnV0ZSgncm93cycsICc0Jyk7IC8vIFNldCB0aGUgbnVtYmVyIG9mIHZpc2libGUgcm93c1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB0b0RvRGVzY3JpcHRpb25Db250YWluZXIucmVwbGFjZUNoaWxkKHRleHRhcmVhLCB0b0RvRGVzY3JpcHRpb24pO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB0ZXh0YXJlYS5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgdG9Eb0Rlc2NyaXB0aW9uLnZhbHVlID0gdGV4dGFyZWEudmFsdWU7XG4gICAgICAgICAgICAgICAgICBwcm9qZWN0LnRvZG9zW2ldLmVkaXREZXNjcmlwdGlvbih0ZXh0YXJlYS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICBkaXNwbGF5UHJvamVjdChwcm9qZWN0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIE5vdGVzIEV2ZW50XG4gICAgICAgICAgICB0b0RvTm90ZXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGV4dGFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpOyAvLyB0ZXh0YXJlYSB0byBlbmFibGUgdGV4dCB3cmFwcGluZ1xuICAgICAgICAgICAgICAgIHRleHRhcmVhLnZhbHVlID0gdG9Eb05vdGVzLnZhbHVlO1xuICAgICAgICAgICAgICAgIHRleHRhcmVhLnNldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJywgMjAwKTtcbiAgICAgICAgICAgICAgICB0ZXh0YXJlYS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvZG8tbm90ZXMnKTtcbiAgICAgICAgICAgICAgICB0ZXh0YXJlYS5zZXRBdHRyaWJ1dGUoJ3Jvd3MnLCAnNicpO1xuXG4gICAgICAgICAgICAgICAgdG9Eb05vdGVzQ29udGFpbmVyLnJlcGxhY2VDaGlsZCh0ZXh0YXJlYSwgdG9Eb05vdGVzKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHRleHRhcmVhLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRvRG9Ob3Rlcy52YWx1ZSA9IHRleHRhcmVhLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0LnRvZG9zW2ldLm5vdGVzID0gdGV4dGFyZWEudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0KHByb2plY3QpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAvLyBEdWUgRGF0ZSBFdmVudFxuICAgICAgICAgICAgdG9Eb0R1ZURhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGFuIGlucHV0IGVsZW1lbnQgd2l0aCB0eXBlIFwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgICAgIGlucHV0LnR5cGUgPSAnZGF0ZSc7XG4gICAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBwcm9qZWN0LnRvZG9zW2ldLmR1ZURhdGU7XG5cbiAgICAgICAgICAgICAgICAvLyBSZXBsYWNlIHRoZSBkdWUgZGF0ZSBlbGVtZW50IHdpdGggdGhlIGlucHV0IGVsZW1lbnRcbiAgICAgICAgICAgICAgICB0b0RvRHVlRGF0ZUNvbnRhaW5lci5yZXBsYWNlQ2hpbGQoaW5wdXQsIHRvRG9EdWVEYXRlKTtcblxuICAgICAgICAgICAgICAgIC8vIEFkZCBjaGFuZ2UgZXZlbnQgbGlzdGVuZXIgdG8gaW5wdXQgZWxlbWVudFxuICAgICAgICAgICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdG9Eb0R1ZURhdGUudGV4dENvbnRlbnQgPSBpbnB1dC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdC50b2Rvc1tpXS5lZGl0RHVlRGF0ZShpbnB1dC52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0KHByb2plY3QpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIFJlbW92ZSBCdXR0b24gRXZlbnRcbiAgICAgICAgICAgIHRvRG9SZW1vdmVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJvamVjdC50b2Rvcy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgZGlzcGxheVByb2plY3QocHJvamVjdCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdG9Eb0VsZW1lbnQuYXBwZW5kQ2hpbGQodG9Eb1RpdGxlQ29udGFpbmVyKTtcbiAgICAgICAgICAgIHRvRG9FbGVtZW50LmFwcGVuZENoaWxkKHRvRG9EZXNjcmlwdGlvbkNvbnRhaW5lcik7XG4gICAgICAgICAgICB0b0RvRWxlbWVudC5hcHBlbmRDaGlsZCh0b0RvUHJpb3JpdHlDb250YWluZXIpO1xuICAgICAgICAgICAgdG9Eb0VsZW1lbnQuYXBwZW5kQ2hpbGQodG9Eb05vdGVzQ29udGFpbmVyKTtcbiAgICAgICAgICAgIHRvRG9FbGVtZW50LmFwcGVuZENoaWxkKHRvRG9EdWVEYXRlQ29udGFpbmVyKTtcbiAgICAgICAgICAgIHRvRG9FbGVtZW50LmFwcGVuZENoaWxkKHRvRG9SZW1vdmVCdXR0b24pO1xuXG4gICAgICAgICAgICB0b0RvTGlzdC5hcHBlbmRDaGlsZCh0b0RvRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvamVjdCB7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCB0b2RvcylcbiAgICB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRvZG9zID0gdG9kb3MgfHwgW107XG4gICAgfVxuXG4gICAgbWFya0NvbXBsZXRlKCkge1xuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgZWRpdFRpdGxlKG5ld1RpdGxlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSBuZXdUaXRsZTtcbiAgICB9XG5cbiAgICBlZGl0RGVzY3JpcHRpb24obmV3RGVzY3JpcHRpb24pIHtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IG5ld0Rlc2NyaXB0aW9uO1xuICAgIH1cblxuICAgIGFkZFRvRG8odG9kbykge1xuICAgICAgICB0aGlzLnRvZG9zLnB1c2godG9kbyk7XG4gICAgfVxufSIsImltcG9ydCBQcm9qZWN0IGZyb20gJy4vcHJvamVjdC1vYmplY3QuanMnO1xuXG5jb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QoXCJGaXJzdCBQcm9qZWN0XCIsIFwiSXQncyBteSBmaXJzdCBwcm9qZWN0IVwiLCBbXSk7XG5cbmV4cG9ydCBkZWZhdWx0IHByb2plY3Q7IiwibGV0IGN1cnJlbnRQcm9qZWN0SW5kZXggPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0SW5kZXgoaW5kZXgpIHtcbiAgICBjdXJyZW50UHJvamVjdEluZGV4ID0gaW5kZXg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXJyZW50SW5kZXgoKSB7XG4gICAgcmV0dXJuIGN1cnJlbnRQcm9qZWN0SW5kZXg7XG59IiwiaW1wb3J0IHsgc2V0SW5kZXggfSBmcm9tICcuL2N1cnJlbnQtcHJvamVjdC1pbmRleC5qcyc7XG5pbXBvcnQgZGlzcGxheVByb2plY3QgZnJvbSBcIi4vZGlzcGxheS1wcm9qZWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdlbmVyYXRlUHJvamVjdHMocG9ydGZvbGlvKSB7XG4gICAgY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdC1saXN0Jyk7XG4gICAgcHJvamVjdExpc3QuaW5uZXJIVE1MID0gXCJcIjsgLy8gcmVtb3ZlIG9sZCBsaXN0IGJlZm9yZSBnZW5lcmF0aW5nIGEgbmV3IG9uZVxuICAgIGlmKEFycmF5LmlzQXJyYXkocG9ydGZvbGlvLnByb2plY3RzKSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBvcnRmb2xpby5wcm9qZWN0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcHJvamVjdCA9IHBvcnRmb2xpby5wcm9qZWN0c1tpXTtcbiAgICAgICAgICAgIGNvbnN0IHByb2pFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgICAgIHByb2pFbGVtZW50LnRleHRDb250ZW50ID0gcHJvamVjdC50aXRsZTtcbiAgICAgICAgICAgIHByb2pFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0KHByb2plY3QpOyAvLyBkaXNwbGF5IHRoZSBjdXJyZW50IHByb2plY3RcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKTsgLy8gc2V0IHRoZSBjdXJyZW50IHByb2plY3RcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQocHJvakVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gY29uc3QgcG9ydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3J0Zm9saW8nKTtcbiAgICAvLyBwb3J0LmFwcGVuZENoaWxkKHByb2plY3RMaXN0KTtcbn0iLCJleHBvcnQgZnVuY3Rpb24gY3JlYXRlRm9ybSgpIHtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICBcbiAgICBjb25zdCB0aXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICB0aXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1RpdGxlOic7XG4gICAgZm9ybS5hcHBlbmRDaGlsZCh0aXRsZUxhYmVsKTtcbiAgXG4gICAgY29uc3QgdGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgJ3RpdGxlJyk7XG4gICAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ21heGxlbmd0aCcsICcyMCcpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG4gIFxuICAgIGNvbnN0IGRlc2NyaXB0aW9uTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGRlc2NyaXB0aW9uTGFiZWwudGV4dENvbnRlbnQgPSAnRGVzY3JpcHRpb246JztcbiAgICBmb3JtLmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uTGFiZWwpO1xuICBcbiAgICBjb25zdCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBkZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgZGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnZGVzY3JpcHRpb24nKTtcbiAgICBkZXNjcmlwdGlvbklucHV0LnNldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJywgJzUwJyk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbklucHV0KTtcbiAgXG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gJ1N1Ym1pdCc7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChzdWJtaXRCdXR0b24pO1xuICBcbiAgICByZXR1cm4gZm9ybTtcbiAgfVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRm9ybVN1Ym1pdChmb3JtRGF0YSkge1xuICAgIGNvbnN0IHRpdGxlID0gZm9ybURhdGEuZ2V0KCd0aXRsZScpO1xuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZm9ybURhdGEuZ2V0KCdkZXNjcmlwdGlvbicpO1xuICAgIGNvbnN0IGFycmF5ID0gW107XG4gIFxuICAgIHJldHVybiB7IHRpdGxlLCBkZXNjcmlwdGlvbiwgYXJyYXkgfTtcbn0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBkaXNwbGF5UHJvamVjdCBmcm9tICcuL2Rpc3BsYXktcHJvamVjdCc7XG5pbXBvcnQgRmlyc3RQcm9qZWN0IGZyb20gJy4vY3JlYXRlLWRlZmF1bHQtcHJvamVjdC5qcyc7XG5pbXBvcnQgUG9ydGZvbGlvIGZyb20gJy4vcG9ydGZvbGlvLW9iamVjdCc7XG5pbXBvcnQgZGlzcGxheVBvcnRmb2xpbyBmcm9tICcuL2Rpc3BsYXktcG9ydGZvbGlvJztcblxuLy8gQ3JlYXRlcyBhIHBvcnRmb2xpbyBvYmplY3QgdG8gaG9sZCB0aGUgZGF0YSBvZiBhbGwgdGhlIHByb2plY3RzLlxuLy8gQ3JlYXRlcyBhIHBvcnRmb2xpbyBlbGVtZW50IGFuZCBwcm9qZWN0IGVsZW1lbnQuXG4vLyBDYWxscyB0aGUgZGlzcGxheVBvcnRmb2xpbyBhbmQgZGlzcGxheVByb2plY3QgbWV0aG9kcyB0byBwb3B1bGF0ZSBib3RoIG9mIHRoZXNlIGVsZW1lbnRzLlxuXG5jb25zdCBwb3J0Zm9saW8gPSBuZXcgUG9ydGZvbGlvKFtdKTtcbnBvcnRmb2xpby5hZGRQcm9qZWN0KEZpcnN0UHJvamVjdCk7XG5cbmNvbnN0IG1haW5Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpOyAvLyBnZXQgbWFpbiBjb250YWluZXJcbmNvbnN0IG5ld1BvcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgLy8gcG9ydGZvbGlvIGNvbnRhaW5lclxubmV3UG9ydC5pZCA9ICdwb3J0Zm9saW8nOyAvLyBzZXQgdGhlIElEIG9mIHRoZSBlbGVtZW50XG5jb25zdCBuZXdQcm9qID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5uZXdQcm9qLmlkID0gJ3Byb2plY3QnOyAvLyBzZXQgdGhlIGNsYXNzIG9mIHRoZSBlbGVtZW50XG5cbm1haW5Db250YWluZXIuYXBwZW5kQ2hpbGQobmV3UG9ydCk7XG5tYWluQ29udGFpbmVyLmFwcGVuZENoaWxkKG5ld1Byb2opO1xuXG5kaXNwbGF5UG9ydGZvbGlvKHBvcnRmb2xpbyk7XG5kaXNwbGF5UHJvamVjdChGaXJzdFByb2plY3QpOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcnRmb2xpbyB7XG4gICAgY29uc3RydWN0b3IocHJvamVjdHMpXG4gICAge1xuICAgICAgICB0aGlzLnByb2plY3RzID0gcHJvamVjdHM7XG4gICAgfVxuXG4gICAgYWRkUHJvamVjdChwcm9qZWN0KVxuICAgIHtcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKHByb2plY3QpO1xuICAgIH1cblxuICAgIHJlbW92ZVByb2plY3QoaW5kZXgpXG4gICAge1xuICAgICAgICB0aGlzLnByb2plY3RzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfVxufSIsImltcG9ydCBkaXNwbGF5UHJvamVjdCBmcm9tIFwiLi9kaXNwbGF5LXByb2plY3RcIjtcbmltcG9ydCBnZW5lcmF0ZVByb2plY3RzIGZyb20gXCIuL2dlbmVyYXRlUHJvamVjdExpc3RcIjtcbmltcG9ydCB7IGNyZWF0ZUZvcm0sIGhhbmRsZUZvcm1TdWJtaXR9IGZyb20gXCIuL25ldy1wcm9qZWN0XCI7XG5pbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZWN0LW9iamVjdFwiO1xuaW1wb3J0IHsgc2V0SW5kZXgsIGdldEN1cnJlbnRJbmRleCB9IGZyb20gXCIuL2N1cnJlbnQtcHJvamVjdC1pbmRleFwiO1xuXG4vLyBQb3B1bGF0ZXMgdGhlIHBvcnRmb2xpbyBlbGVtZW50IHdpdGggYSB0aXRsZSwgYSBsaXN0IG9mIGFsbCB0aGUgcHJvamVjdHMsIGFuZCB0aHJlZSBidXR0b25zOlxuLy8gdG8gYWRkIGEgcHJvamVjdCBhbmQgc2VsZWN0IGl0OyB0byBlZGl0IHRoZSBjdXJyZW50IHByb2plY3QncyB0aXRsZSBhbmQgZGVzY3JpcHRpb247XG4vLyB0byBkZWxldGUgdGhlIGN1cnJlbnQgcHJvamVjdCBmcm9tIHRoZSBwb3J0Zm9saW8uXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpc3BsYXlQb3J0Zm9saW8ocG9ydGZvbGlvKSB7XG4gICAgY29uc3QgbmV3UG9ydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3J0Zm9saW8nKTsgLy8gZ2V0IHBvcnRmb2xpbyBjb250YWluZXJcblxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgICBjb25zdCB0aXRsZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRpdGxlQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAncG9ydGZvbGlvLXRpdGxlJyk7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBcIk15IFBvcnRmb2xpb1wiOyAvLyBzZXQgdGhlIHRpdGxlIGFzIHRoZSB0ZXh0IGNvbnRlbnRcbiAgICB0aXRsZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgbmV3UG9ydC5hcHBlbmRDaGlsZCh0aXRsZUNvbnRhaW5lcik7XG5cbiAgICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gICAgcHJvamVjdExpc3Quc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0LWxpc3QnKTtcbiAgICBuZXdQb3J0LmFwcGVuZENoaWxkKHByb2plY3RMaXN0KTtcblxuICAgIGNvbnN0IG5ld1Byb2pCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBuZXdQcm9qQnV0dG9uLmlkID0gXCJuZXctcHJvamVjdC1idXR0b25cIjtcbiAgICBuZXdQcm9qQnV0dG9uLnRleHRDb250ZW50ID0gXCJOZXcgUHJvamVjdFwiO1xuICAgIG5ld1Byb2pCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZvcm0gPSBjcmVhdGVGb3JtKCk7XG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChuZXdQcm9qQnV0dG9uKTsgLy8gcmVtb3ZlIGJ1dHRvbnMgdW50aWwgc3VibWl0IGV2ZW50IGhhcyBjb25jbHVkZWRcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKGVkaXRQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKHJlbW92ZVByb2plY3RCdXR0b24pO1xuICAgICAgICBidXR0b25Db250YWluZXIucmVtb3ZlQ2hpbGQoY29tcGxldGVQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShldmVudC50YXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgeyB0aXRsZSwgZGVzY3JpcHRpb24sIGFycmF5IH0gPSBoYW5kbGVGb3JtU3VibWl0KGZvcm1EYXRhKTtcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3QgPSBuZXcgUHJvamVjdCh0aXRsZSwgZGVzY3JpcHRpb24sIGFycmF5KTtcbiAgICAgICAgICAgIHBvcnRmb2xpby5hZGRQcm9qZWN0KHByb2plY3QpOyAvLyBhZGQgbmV3IHByb2plY3QgdG8gcG9ydGZvbGlvIGFycmF5XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIucmVtb3ZlQ2hpbGQoZm9ybSk7IC8vIHJlbW92ZSBmb3JtIHVwb24gc3VibWlzc2lvblxuICAgICAgICAgICAgZGlzcGxheVByb2plY3QocHJvamVjdCk7IC8vIGRpc3BsYXkgdGhlIG5ldyBwcm9qZWN0XG4gICAgICAgICAgICBzZXRJbmRleChwb3J0Zm9saW8ucHJvamVjdHMubGVuZ3RoIC0gMSk7IC8vIGRvbid0IHNvcnQgdGhlIHByb2plY3RzIGluc2lkZSB0aGUgb2JqZWN0IGl0c2VsZlxuICAgICAgICAgICAgZ2VuZXJhdGVQcm9qZWN0cyhwb3J0Zm9saW8pOyAvLyBnZW5lcmF0ZSBwcm9qZWN0IGxpc3QgYWdhaW5cbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChuZXdQcm9qQnV0dG9uKTsgLy8gcmUtYWRkIGJ1dHRvbnNcbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChlZGl0UHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQocmVtb3ZlUHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoY29tcGxldGVQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGVkaXRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgZWRpdFByb2plY3RCdXR0b24uaWQgPSBcImVkaXQtcHJvamVjdC1idXR0b25cIjtcbiAgICBlZGl0UHJvamVjdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiRWRpdCBQcm9qZWN0XCI7XG4gICAgZWRpdFByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZvcm0gPSBjcmVhdGVGb3JtKCk7XG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChuZXdQcm9qQnV0dG9uKTtcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKGVkaXRQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKHJlbW92ZVByb2plY3RCdXR0b24pO1xuICAgICAgICBidXR0b25Db250YWluZXIucmVtb3ZlQ2hpbGQoY29tcGxldGVQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShldmVudC50YXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgeyB0aXRsZSwgZGVzY3JpcHRpb24gfSA9IGhhbmRsZUZvcm1TdWJtaXQoZm9ybURhdGEpO1xuICAgICAgICAgICAgbGV0IGN1cnJQcm9qSW5kZXggPSBnZXRDdXJyZW50SW5kZXgoKTtcbiAgICAgICAgICAgIHBvcnRmb2xpby5wcm9qZWN0c1tjdXJyUHJvakluZGV4XS50aXRsZSA9IHRpdGxlOyAvLyB1cGRhdGUgdGhlIHByb2plY3QgaW4gdGhlIGFycmF5XG4gICAgICAgICAgICBwb3J0Zm9saW8ucHJvamVjdHNbY3VyclByb2pJbmRleF0uZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChmb3JtKTtcbiAgICAgICAgICAgIGdlbmVyYXRlUHJvamVjdHMocG9ydGZvbGlvKTsgLy8gZ2VuZXJhdGUgcHJvamVjdCBsaXN0IGFnYWluXG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQobmV3UHJvakJ1dHRvbik7IC8vIHJlLWFkZCBidXR0b25zXG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoZWRpdFByb2plY3RCdXR0b24pO1xuICAgICAgICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHJlbW92ZVByb2plY3RCdXR0b24pO1xuICAgICAgICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGNvbXBsZXRlUHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBkaXNwbGF5UHJvamVjdChwb3J0Zm9saW8ucHJvamVjdHNbY3VyclByb2pJbmRleF0pOyAvLyByZS1kaXNwbGF5IHRoZSBjdXJyZW50IHByb2plY3RcbiAgICAgICAgfSk7XG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlbW92ZVByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICByZW1vdmVQcm9qZWN0QnV0dG9uLmlkID0gXCJyZW1vdmUtcHJvamVjdC1idXR0b25cIjtcbiAgICByZW1vdmVQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGUgUHJvamVjdFwiO1xuICAgIHJlbW92ZVByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIC8vIFRlc3QgdG8gc2VlIGlmIHRoZXJlIGlzIG1vcmUgdGhhbiBvbmUgcHJvamVjdCBsZWZ0LiBJZiB0aGVyZSBpcyBvbmx5IG9uZSBwcm9qZWN0LCBub3RoaW5nIHdpbGwgaGFwcGVuLlxuICAgICAgICBpZihwb3J0Zm9saW8ucHJvamVjdHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKG5ld1Byb2pCdXR0b24pO1xuICAgICAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKGVkaXRQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChyZW1vdmVQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChjb21wbGV0ZVByb2plY3RCdXR0b24pO1xuICAgICAgICAgICAgbGV0IGN1cnJQcm9qSW5kZXggPSBnZXRDdXJyZW50SW5kZXgoKTtcbiAgICAgICAgICAgIHBvcnRmb2xpby5yZW1vdmVQcm9qZWN0KGN1cnJQcm9qSW5kZXgpO1xuICAgICAgICAgICAgZ2VuZXJhdGVQcm9qZWN0cyhwb3J0Zm9saW8pOyAvLyBnZW5lcmF0ZSBwcm9qZWN0IGxpc3QgYWdhaW5cbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChuZXdQcm9qQnV0dG9uKTsgLy8gcmUtYWRkIGJ1dHRvbnNcbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChlZGl0UHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQocmVtb3ZlUHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoY29tcGxldGVQcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgICAgIHNldEluZGV4KDApOyAvLyByZXNldCBpbmRleCB2YWx1ZVxuICAgICAgICAgICAgY3VyclByb2pJbmRleCA9IGdldEN1cnJlbnRJbmRleCgpO1xuICAgICAgICAgICAgZGlzcGxheVByb2plY3QocG9ydGZvbGlvLnByb2plY3RzW2N1cnJQcm9qSW5kZXhdKTsgLy8gcmUtZGlzcGxheSB0aGUgZmlyc3QgcHJvamVjdCBvbiB0aGUgbGlzdFxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCBjb21wbGV0ZVByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjb21wbGV0ZVByb2plY3RCdXR0b24uaWQgPSBcImNvbXBsZXRlLXByb2plY3QtYnV0dG9uXCI7XG4gICAgY29tcGxldGVQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gXCJDaGFuZ2UgQ29tcGxldGlvbiBTdGF0dXNcIjtcbiAgICBjb21wbGV0ZVByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIucmVtb3ZlQ2hpbGQobmV3UHJvakJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIucmVtb3ZlQ2hpbGQoZWRpdFByb2plY3RCdXR0b24pO1xuICAgICAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKHJlbW92ZVByb2plY3RCdXR0b24pO1xuICAgICAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbXBsZXRlUHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBsZXQgY3VyclByb2pJbmRleCA9IGdldEN1cnJlbnRJbmRleCgpO1xuICAgICAgICAgICAgaWYocG9ydGZvbGlvLnByb2plY3RzW2N1cnJQcm9qSW5kZXhdLmNvbXBsZXRlZCA9PT0gdHJ1ZSlcbiAgICAgICAgICAgICAgICBwb3J0Zm9saW8ucHJvamVjdHNbY3VyclByb2pJbmRleF0uY29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcG9ydGZvbGlvLnByb2plY3RzW2N1cnJQcm9qSW5kZXhdLmNvbXBsZXRlZCA9IHRydWU7XG5cbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChuZXdQcm9qQnV0dG9uKTsgLy8gcmUtYWRkIGJ1dHRvbnNcbiAgICAgICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChlZGl0UHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQocmVtb3ZlUHJvamVjdEJ1dHRvbik7XG4gICAgICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoY29tcGxldGVQcm9qZWN0QnV0dG9uKTtcblxuICAgICAgICAgICAgZGlzcGxheVByb2plY3QocG9ydGZvbGlvLnByb2plY3RzW2N1cnJQcm9qSW5kZXhdKTtcbiAgICB9KTtcbiAgICBcbiAgICBjb25zdCBidXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBidXR0b25Db250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdwb3J0Zm9saW8tYnV0dG9ucycpO1xuICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChuZXdQcm9qQnV0dG9uKTtcbiAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoZWRpdFByb2plY3RCdXR0b24pO1xuICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChyZW1vdmVQcm9qZWN0QnV0dG9uKTtcbiAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoY29tcGxldGVQcm9qZWN0QnV0dG9uKTtcblxuICAgIGdlbmVyYXRlUHJvamVjdHMocG9ydGZvbGlvKTtcbiAgICBuZXdQb3J0LmFwcGVuZENoaWxkKGJ1dHRvbkNvbnRhaW5lcik7XG59Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsIlRvZG8iLCJjb25zdHJ1Y3RvciIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJub3RlcyIsImNvbXBsZXRlZCIsIm1hcmtDb21wbGV0ZSIsImVkaXRUaXRsZSIsIm5ld1RpdGxlIiwiZWRpdERlc2NyaXB0aW9uIiwibmV3RGVzY3JpcHRpb24iLCJlZGl0RHVlRGF0ZSIsIm5ld0R1ZURhdGUiLCJlZGl0UHJpb3JpdHkiLCJuZXdQcmlvcml0eSIsImVkaXROb3RlIiwibmV3Tm90ZSIsIm5vdGUiLCJkaXNwbGF5UHJvamVjdCIsInByb2plY3QiLCJtYWluQ29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJuZXdQcm9qIiwiaW5uZXJIVE1MIiwidGV4dENvbnRlbnQiLCJ0b0RvTGlzdExhYmVsIiwidG9Eb0xpc3QiLCJuZXdUb0RvQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImZvcm0iLCJmb3JtVGl0bGUiLCJ0aXRsZUxhYmVsIiwiZm9ybURlc2MiLCJkZXNjTGFiZWwiLCJwcmlvcml0eUxhYmVsIiwicHJpb3JpdHlMZXZlbDEiLCJwcmlvcml0eUxhYmVsMSIsInByaW9yaXR5Q29udGFpbmVyMSIsInByaW9yaXR5TGV2ZWwyIiwicHJpb3JpdHlMYWJlbDIiLCJwcmlvcml0eUNvbnRhaW5lcjIiLCJwcmlvcml0eUxldmVsMyIsInByaW9yaXR5TGFiZWwzIiwicHJpb3JpdHlDb250YWluZXIzIiwiZm9ybU5vdGVzIiwibm90ZXNMYWJlbCIsImZvcm1EdWVEYXRlIiwiZHVlZGF0ZUxhYmVsIiwic3VibWl0QnV0dG9uIiwibmV3VG9Eb0Zvcm0iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImRlc2MiLCJoYW5kbGVUb2RvRm9ybVN1Ym1pdCIsIm5ld1RvRG9JdGVtIiwiYWRkVG9EbyIsIkFycmF5IiwiaXNBcnJheSIsInRvZG9zIiwidG9Eb0VsZW1lbnQiLCJ0b0RvVGl0bGVDb250YWluZXIiLCJ0b0RvVGl0bGVMYWJlbCIsInRvRG9UaXRsZSIsInZhbHVlIiwidG9Eb0Rlc2NyaXB0aW9uQ29udGFpbmVyIiwidG9Eb0Rlc2NyaXB0aW9uTGFiZWwiLCJ0b0RvRGVzY3JpcHRpb24iLCJ0b0RvUHJpb3JpdHlDb250YWluZXIiLCJ0b0RvUHJpb3JpdHlMYWJlbCIsInRvRG9Qcmlvcml0eSIsInRvRG9Ob3Rlc0NvbnRhaW5lciIsInRvRG9Ob3Rlc0xhYmVsIiwidG9Eb05vdGVzIiwidG9Eb0R1ZURhdGVDb250YWluZXIiLCJ0b0RvRHVlRGF0ZUxhYmVsIiwidG9Eb0R1ZURhdGUiLCJ0b0RvUmVtb3ZlQnV0dG9uIiwiaW5wdXQiLCJ0eXBlIiwicmVwbGFjZUNoaWxkIiwicmFkaW9CdXR0b25zIiwiY2xhc3NMaXN0IiwiYWRkIiwiZm9yRWFjaCIsIm9wdGlvbiIsInJhZGlvQnV0dG9uIiwiY2hlY2tlZCIsImxhYmVsIiwicmFkaW9CdXR0b25Db250YWluZXIiLCJ0ZXh0YXJlYSIsImdlbmVyYXRlVG9EbyIsIlByb2plY3QiLCJ0b2RvIiwiY3VycmVudFByb2plY3RJbmRleCIsInNldEluZGV4IiwiZ2V0Q3VycmVudEluZGV4IiwiZ2VuZXJhdGVQcm9qZWN0cyIsInBvcnRmb2xpbyIsInByb2plY3RMaXN0IiwicHJvamVjdHMiLCJwcm9qRWxlbWVudCIsImNyZWF0ZUZvcm0iLCJ0aXRsZUlucHV0IiwiZGVzY3JpcHRpb25MYWJlbCIsImRlc2NyaXB0aW9uSW5wdXQiLCJoYW5kbGVGb3JtU3VibWl0IiwiYXJyYXkiLCJhZGRQcm9qZWN0IiwicmVtb3ZlUHJvamVjdCIsIm5ld1BvcnQiLCJ0aXRsZUNvbnRhaW5lciIsIm5ld1Byb2pCdXR0b24iLCJidXR0b25Db250YWluZXIiLCJlZGl0UHJvamVjdEJ1dHRvbiIsInJlbW92ZVByb2plY3RCdXR0b24iLCJjb21wbGV0ZVByb2plY3RCdXR0b24iLCJjdXJyUHJvakluZGV4IiwiZGlzcGxheVBvcnRmb2xpbyJdLCJzb3VyY2VSb290IjoiIn0=