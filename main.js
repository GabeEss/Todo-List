(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),c=n.n(i)()(r());c.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const a=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&c[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},c=[],a=0;a<e.length;a++){var d=e[a],l=o.base?d[0]+o.base:d[0],s=i[l]||0,p="".concat(l," ").concat(s);i[l]=s+1;var u=n(p),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var h=r(m,o);o.byIndex=a,t.splice(a,0,{identifier:p,updater:h,references:1})}c.push(p)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=n(i[c]);t[a].references--}for(var d=o(e,r),l=0;l<i.length;l++){var s=n(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),i=n(569),c=n.n(i),a=n(565),d=n.n(a),l=n(216),s=n.n(l),p=n(589),u=n.n(p),m=n(426),h={};h.styleTagTransform=u(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=s(),t()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;class C{constructor(e,t,n,o,r){this.title=e,this.description=t,this.priority=o,this.notes=r,this.dueDate=n,this.completed=!1}markComplete(){this.completed=!0}editTitle(e){this.title=e}editDescription(e){this.description=e}editDueDate(e){this.dueDate=e}editPriority(e){this.priority=e}editNote(e){this.note=e}}function v(e){const t=document.getElementById("content"),n=document.getElementById("project");t.removeChild(n),n.innerHTML="";const o=document.createElement("h2");o.textContent=e.title;const r=document.createElement("p");r.textContent=e.description;const i=document.createElement("p");!0!==e.completed?i.textContent="This project has not been completed.":i.textContent="This project has been completed.";const c=document.createElement("div");c.setAttribute("id","todo-container");const a=document.createElement("label");a.textContent="To-do Items: ",c.appendChild(a);const d=document.createElement("button");d.textContent="New ToDo",d.addEventListener("click",(()=>{const t=function(){const e=document.createElement("form");e.setAttribute("id","new-todo");const t=document.createElement("textarea");t.setAttribute("maxlength","50"),t.setAttribute("required","true"),t.setAttribute("name","title");const n=document.createElement("label");n.setAttribute("for","titleLabel"),n.textContent="Title: ";const o=document.createElement("textarea");o.setAttribute("maxlength","100"),o.setAttribute("name","description");const r=document.createElement("label");r.setAttribute("for","descriptionLabel"),r.textContent="Description: ";const i=document.createElement("label");i.setAttribute("for","priorityLabel"),i.textContent="Priority Level: ";const c=document.createElement("input");c.setAttribute("type","radio"),c.setAttribute("name","priority"),c.setAttribute("value","1"),c.setAttribute("checked",!0);const a=document.createElement("label");a.textContent="Low";const d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("name","priority"),d.setAttribute("value","2");const l=document.createElement("label");l.textContent="Medium";const s=document.createElement("input");s.setAttribute("type","radio"),s.setAttribute("name","priority"),s.setAttribute("value","3");const p=document.createElement("label");p.textContent="High";const u=document.createElement("textarea");u.setAttribute("maxlength","250"),u.setAttribute("name","notes");const m=document.createElement("label");m.setAttribute("for","notesLabel"),m.textContent="Notes: ";const h=document.createElement("input");h.setAttribute("type","date"),h.setAttribute("name","dueDate");const C=document.createElement("label");C.setAttribute("for","dueDateLabel"),C.textContent="Due Date: ";const v=document.createElement("button");return v.textContent="Create ToDo",e.appendChild(n),e.appendChild(t),e.appendChild(document.createElement("br")),e.appendChild(r),e.appendChild(o),e.appendChild(document.createElement("br")),e.appendChild(i),e.appendChild(c),e.appendChild(a),e.appendChild(d),e.appendChild(l),e.appendChild(s),e.appendChild(p),e.appendChild(document.createElement("br")),e.appendChild(m),e.appendChild(u),e.appendChild(document.createElement("br")),e.appendChild(C),e.appendChild(h),e.appendChild(document.createElement("br")),e.appendChild(v),e}();n.removeChild(d),n.appendChild(t),t.addEventListener("submit",(o=>{o.preventDefault();const r=new FormData(o.target),{title:i,desc:c,priority:a,notes:d,dueDate:l}=function(e){return{title:e.get("title"),desc:e.get("description"),priority:e.get("priority"),notes:e.get("notes"),dueDate:e.get("dueDate")}}(r),s=new C(i,c,l,a,d);e.addToDo(s),n.removeChild(t),v(e)}))})),n.appendChild(o),n.appendChild(r),n.appendChild(i),n.appendChild(c),n.appendChild(d),t.appendChild(n),function(e){const t=document.getElementById("todo-container");if(Array.isArray(e.todos))for(let n=0;n<e.todos.length;n++){e.todos[n];const o=document.createElement("div"),r=document.createElement("label");r.textContent="Todo "+n+": ";const i=document.createElement("input");i.setAttribute("type","text"),i.value=e.todos[n].title,document.createElement("label").textContent="Description: ";const c=document.createElement("input");c.setAttribute("type","text"),c.value=e.todos[n].description,document.createElement("label").textContent="Priority: ";const a=document.createElement("input");a.setAttribute("type","radio"),a.setAttribute("name","priority"+n),a.setAttribute("value","Low"),document.createElement("label").textContent="Low";const d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("name","priority"+n),d.setAttribute("value","Medium"),document.createElement("label").textContent="Medium";const l=document.createElement("input");l.setAttribute("type","radio"),l.setAttribute("name","priority"+n),l.setAttribute("value","High"),document.createElement("label").textContent="High",document.createElement("label").textContent="Notes: ";const s=document.createElement("input");s.setAttribute("type","text"),s.value=e.todos[n].notes,document.createElement("label").textContent="Due date: ";const p=document.createElement("input");p.setAttribute("type","date"),p.value=e.todos[n].dueDate,i.addEventListener("click",(()=>{const t=document.createElement("input");t.type="text",t.value=i.value,o.replaceChild(t,i),t.addEventListener("blur",(()=>{i.value=t.value,e.toDos[n].editTitle(t.value),v(e),r.textContent="Todo "+n+": "}))})),c.addEventListener("click",(()=>{const t=document.createElement("input");t.type="text",t.value=c.textContent,o.replaceChild(t,c),t.addEventListener("blur",(()=>{c.textContent=t.value,e.todos[n].editDescription(t.value),v(e)}))})),s.addEventListener("click",(()=>{const t=document.createElement("input");t.type="text",t.value=s.textContent,o.replaceChild(t,s),t.addEventListener("blur",(()=>{i.textContent=t.value,e.todos[n].editNote(t.value),v(e)}))})),p.addEventListener("click",(()=>{const t=document.createElement("input");t.type="date",t.value=e.todos[n].dueDate,o.replaceChild(t,p),t.addEventListener("change",(()=>{p.textContent=t.value,e.todos[n].editDueDate(t.value),v(e)}))})),o.appendChild(i),o.appendChild(c),o.appendChild(s),o.appendChild(p),t.appendChild(o)}}(e)}class b{constructor(e,t,n){this.title=e,this.description=t,this.completed=!1,this.todos=n||[]}markComplete(){this.completed=!0}editTitle(e){this.title=e}editDescription(e){this.description=e}addToDo(e){this.todos.push(e)}}const f=new b("First Project","It's my first project!",[]);let E=0;function y(e){E=e}function x(){return E}function A(e){const t=document.getElementById("project-list");if(t.innerHTML="",Array.isArray(e.projects))for(let n=0;n<e.projects.length;n++){const o=e.projects[n],r=document.createElement("li");r.textContent=o.title,r.addEventListener("click",(()=>{v(o),y(n)})),t.appendChild(r)}document.getElementById("portfolio").appendChild(t)}function g(){const e=document.createElement("form"),t=document.createElement("label");t.textContent="Title:",e.appendChild(t);const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","title"),e.appendChild(n);const o=document.createElement("label");o.textContent="Description:",e.appendChild(o);const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("name","description"),e.appendChild(r);const i=document.createElement("button");return i.textContent="Submit",e.appendChild(i),e}function j(e){return{title:e.get("title"),description:e.get("description"),array:[]}}const D=new class{constructor(e){this.projects=e}addProject(e){this.projects.push(e)}removeProject(e){this.projects.splice(e,1)}}([]);D.addProject(f);const L=document.getElementById("content"),T=document.createElement("div");T.id="portfolio";const w=document.createElement("div");w.id="project",L.appendChild(T),L.appendChild(w),function(e){document.getElementById("content");const t=document.getElementById("portfolio"),n=document.createElement("h1");n.textContent="My Portfolio",t.appendChild(n);const o=document.createElement("ul");o.setAttribute("id","project-list"),t.appendChild(o);const r=document.createElement("button");r.id="new-project-button",r.textContent="New Project",r.addEventListener("click",(()=>{const n=g();t.removeChild(r),t.removeChild(i),t.removeChild(c),n.addEventListener("submit",(o=>{o.preventDefault();const a=new FormData(o.target),{title:d,description:l,array:s}=j(a),p=new b(d,l,s);e.addProject(p),t.removeChild(n),v(p),y(e.projects.length-1),A(e),t.appendChild(r),t.appendChild(i),t.appendChild(c)})),t.appendChild(n)}));const i=document.createElement("button");i.id="edit-project-button",i.textContent="Edit Project",i.addEventListener("click",(()=>{const n=g();t.removeChild(r),t.removeChild(i),t.removeChild(c),n.addEventListener("submit",(o=>{o.preventDefault();const a=new FormData(o.target),{title:d,description:l}=j(a);let s=x();e.projects[s].title=d,e.projects[s].description=l,t.removeChild(n),A(e),t.appendChild(r),t.appendChild(i),t.appendChild(c),v(e.projects[s])})),t.appendChild(n)}));const c=document.createElement("button");c.id="remove-project-button",c.textContent="Delete Project",c.addEventListener("click",(()=>{if(e.projects.length>1){t.removeChild(r),t.removeChild(i),t.removeChild(c);let n=x();e.removeProject(n),A(e),t.appendChild(r),t.appendChild(i),t.appendChild(c),y(0),n=x(),v(e.projects[n])}})),A(e),t.appendChild(r),t.appendChild(i),t.appendChild(c)}(D),v(f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,